/* 

1. Remove unneeded patterns from folders and any dependencies that use them, plus their related CSS
2. Check through all remaining patterns to see their Sass is accounted for and organized properly.
  * Make sure BEM is being used
3. Go through all SASS files and implement
  * Unique, scoped variables for key styles
  * Global variable usage for related elements
  * Implement Synapse layout, remove Expressive layout

 */
/*

These are all Sass maps that set the global variables used throughout the site

Rules:
1) No styles for elements can be declared here
2) Any variables not in maps must be prefixed with 'g-', and not be used on ANY other stylesheet. Please keep their names as short as possible
3) No map can reference a value in another map, only 'g-' vars if needed
4) Always use these variables on their own. Never use them in operations to output different values, like dividing one in half. Always add this value to the map instead.

*/
/* Clearfix */
.cf, .l-two-col, [role=main] {
  *zoom: 1;
}

.cf:before, .l-two-col:before, [role=main]:before, .cf:after, .l-two-col:after, [role=main]:after {
  content: " ";
  /* 1 */
  display: table;
  /* 2 */
}

.cf:after, .l-two-col:after, [role=main]:after {
  clear: both;
}

/* Completely remove from the flow and screen readers. */
.is-hidden {
  display: none !important;
  visibility: hidden !important;
}

/* Completely remove from the flow but leave available to screen readers. */
.is-vishidden {
  position: absolute !important;
  overflow: hidden;
  width: 1px;
  height: 1px;
  padding: 0;
  border: 0;
  clip: rect(1px, 1px, 1px, 1px);
}

/* Floats */
.right {
  float: right;
  padding: 0 0 1rem 1rem;
}

.right-search {
  float: right;
  padding: 0 0 1rem 0;
}

.left {
  float: left;
  padding: 0 1rem 1rem 0;
}

/* Text-Align */
.align-right {
  text-align: right;
}

.align-center {
  text-align: center;
}

.align-left {
  text-align: left;
}

/* Display Classes */
@media all and (max-width: 46.8em) {
  .hide-small {
    display: none;
  }
}

@media all and (min-width: 46.8em) and (max-width: 50em) {
  .hide-med {
    display: none;
  }
}

@media all and (min-width: 50em) {
  .hide-large {
    display: none;
  }
}

@media all and (min-width: 66em) {
  .hide-large-2 {
    display: none;
  }
}

.valid {
  color: #089e00;
}

.error {
  color: red;
}

/*------------------------------------*    $RESET
\*------------------------------------*/
/* Border-Box http:/paulirish.com/2012/box-sizing-border-box-ftw/ */
* {
  box-sizing: border-box;
}

html, body, div, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, ol, ul, li, form, legend, label, table, header, footer, nav, section, figure {
  margin: 0;
  padding: 0;
}

header, footer, nav, section, article, hgroup, figure {
  display: block;
}

/*! normalize.css v4.0.0 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Change the default font family in all browsers (opinionated).
 * 2. Prevent adjustments of font size after orientation changes in IE and iOS.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0;
}

/* HTML5 display definitions
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 * 2. Add the correct display in IE.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
menu,
nav,
section,
summary {
  /* 1 */
  display: block;
}

/**
 * Add the correct display in IE 9-.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
}

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline;
}

/**
 * Add the correct display in IE 10-.
 * 1. Add the correct display in IE.
 */
template,
[hidden] {
  display: none;
}

/* Links
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * Remove the outline on focused links when they are also active or hovered
 * in all browsers (opinionated).
 */
a:active,
a:hover {
  outline-width: 0;
}

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the bottom border in Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */
}

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit;
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000;
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none;
}

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
   ========================================================================== */
/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px;
}

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/* Forms
   ========================================================================== */
/**
 * Change font properties to `inherit` in all browsers (opinionated).
 */
button,
input,
select,
textarea {
  font: inherit;
}

/**
 * Restore the font weight unset by the previous rule.
 */
optgroup {
  font-weight: bold;
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 * 2. Show the overflow in Edge, Firefox, and IE.
 */
button,
input,
select {
  /* 2 */
  overflow: visible;
}

/**
 * Remove the margin in Safari.
 * 1. Remove the margin in Firefox and Safari.
 */
button,
input,
select,
textarea {
  /* 1 */
  margin: 0;
}

/**
 * Remove the inheritence of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritence of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none;
}

/**
 * Change the cursor in all browsers (opinionated).
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  cursor: pointer;
}

/**
 * Restore the default cursor to disabled elements unset by the previous rule.
 */
[disabled] {
  cursor: default;
}

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
input:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Change the border, margin, and padding in all browsers (opinionated).
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * Correct the odd appearance of search inputs in Chrome and Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
}

/**
 * Remove the inner padding and cancel buttons in Chrome on OS X and
 * Safari on OS X.
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

body {
  font-family: "Lucida Grande", "Tahoma", "Verdana", "Arial", sans-serif;
  color: #000;
}

/* Links */
a {
  color: #477dca;
  text-decoration: none;
  outline: 0;
}

a:hover, a:focus {
  color: #3c6aac;
  text-decoration: underline;
}

/* Headings */
h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: "Verdana", "Geneva", sans-serif;
}

h1, .alpha {
  font-size: 2.98598em;
  line-height: 1.728em;
}

h2, .beta {
  font-size: 2.48832em;
  line-height: 1.728em;
}

h3, .gamma {
  font-size: 2.0736em;
  line-height: 1.728em;
}

h4 {
  font-size: 1.728em;
  line-height: 1.728em;
}

h5 {
  font-size: 1.44em;
  line-height: 1.44em;
}

h6 {
  font-size: 1.2em;
  line-height: 1.44em;
}

/* Subheadings */
.subheading {
  font-family: "Lucida Grande", "Tahoma", "Verdana", "Arial", sans-serif;
  font-weight: 700;
}

/* Text-Related Elements */
p {
  margin-bottom: 1rem;
  font-size: 1em;
  line-height: 1.44em;
}

/* Blockquote */
blockquote {
  font-style: italic;
  border-left: 1px solid gray;
  color: gray;
  padding-left: 1rem;
  margin-bottom: 1rem;
}

/* Horizontal Rule */
hr {
  border: 0;
  height: 2px;
  background: #eeeeee;
  margin: 2rem 0;
}

abbr {
  border-bottom: 1px dotted gray;
  cursor: help;
}

/* Global Font Classes */
.font-secondary {
  font-family: Georgia, Times, "Times New Roman", serif;
}

.intro {
  font-size: 1.0625em;
  font-weight: bold;
}

.pullquote {
  font-family: Georgia, Times, "Times New Roman", serif;
  font-size: 1.4375em;
}

.text a {
  text-decoration: underline;
}

.text ul {
  list-style: disc;
  margin: 0 0 1rem 1.2em;
}

.text ul ul {
  margin-bottom: 0;
}

.text ol {
  list-style: decimal;
  margin: 0 0 1rem 1.2em;
}

.text ol ol {
  margin-bottom: 0;
}

.btn {
  display: inline-block;
  background: #333333;
  color: white;
  line-height: 1;
  font-weight: bold;
  padding: 1rem;
  border: 0;
  text-align: center;
}

.btn:hover, .btn:focus {
  color: white;
}

.btn.disabled {
  background: #eeeeee;
  color: #bbbbbb;
}

.btn-small {
  padding: 0.5rem;
}

.btn-large {
  padding: 0.5rem;
  text-transform: uppercase;
  background: gray;
  font-size: 1.4rem;
  font-weight: normal;
}

.text-btn {
  font-style: italic;
}

ol, ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

/* Definition Lists */
dl {
  overflow: hidden;
  margin: 0 0 1rem;
}

dt {
  font-weight: bold;
}

dd {
  margin-left: 0;
}

/* Headline List */
.headline-list {
  margin-bottom: 1rem;
}

.headline-list.flush {
  margin: 0;
}

.headline-list h4 {
  font-weight: normal;
}

.headline-list li {
  padding: 0.25rem 0;
  border-top: 1px solid #dddddd;
}

/* Post List */
.post-list li {
  margin-bottom: 1rem;
}

/* Bullet List */
.bullet-list {
  list-style: square;
  margin: 0 0 1em 1.2em;
  line-height: 1.3;
}

.bullet-list li {
  margin-bottom: 1rem;
}

/* Text List */
.text-list {
  margin: 0 0 1em;
  line-height: 1.3;
}

.text-list li {
  margin-bottom: 1rem;
}

.tooltip-container {
  display: inline-block;
  position: relative;
}

.tooltip-container:hover .tooltip {
  display: block;
}

.tooltip-link {
  background: #f9f9f9;
}

.tooltip {
  display: none;
  position: absolute;
  top: 1.5em;
  left: 0;
  width: 18em;
  padding: 1rem;
  background: white;
  border: 1px solid gray;
  box-shadow: 0.3em 0.3em 1em 0 rgba(0, 0, 0, 0.2);
}

.tooltip h2 {
  margin-top: 0;
}

@media all and (min-width: 24em) {
  .tooltip {
    width: 22em;
  }
}

@media all and (min-width: 29.75em) {
  .tooltip {
    width: 27em;
  }
}

@media all and (min-width: 39.8em) {
  .tooltip {
    width: 30em;
  }
}

/*------------------------------------*    $MEDIA ELEMENTS
\*------------------------------------*/
/* Flexible Media */
img, video, object {
  max-width: 100%;
  height: auto;
}

iframe {
  margin-bottom: 1rem;
}

figure {
  margin-bottom: 1rem;
}

figure img {
  margin-bottom: 0.25rem;
}

figcaption {
  font-style: italic;
}

/*------------------------------------*    $Table
\*------------------------------------*/
table {
  border-collapse: collapse;
  -webkit-font-feature-settings: 'kern', 'liga', 'tnum';
          font-feature-settings: 'kern', 'liga', 'tnum';
  margin: 0.5em;
  table-layout: fixed;
  width: 100%;
}

th {
  border-bottom: 1px solid #999;
  font-weight: 700;
  padding: 1em 0;
  text-align: left;
}

td {
  border-bottom: 1px solid #999;
  padding: 1em 0;
}

tr,
td,
th {
  vertical-align: middle;
}

/*------------------------------------*    $MEDIA ELEMENTS
\*------------------------------------*/
/* Flexible Media */
img, video, object {
  max-width: 100%;
  height: auto;
}

iframe {
  margin-bottom: 1rem;
}

figure {
  margin-bottom: 1rem;
}

figure img {
  margin-bottom: 0.25rem;
}

figcaption {
  font-style: italic;
}

/*------------------------------------*    $FORMS
\*------------------------------------*/
form > div {
  margin-bottom: 1rem;
}

form ol, form ul {
  list-style: none;
  margin-left: 0;
}

fieldset {
  border: 0;
  padding: 0;
  margin: 0;
}

label {
  display: block;
  padding-bottom: 0.25rem;
}

button, input, select, textarea {
  font-family: inherit;
  font-size: 100%;
  margin: 0;
}

input, textarea {
  width: 100%;
  border: 1px solid gray;
  padding: 0.5rem 0.65rem;
}

input[type=text], input[type=search], input[type=url], input[type=number], textarea {
  -webkit-appearance: none;
}

button, input[type="submit"] {
  padding: 0.5rem;
  background: #333333;
  border: 1px solid gray;
  cursor: pointer;
}

input[type="checkbox"],
input[type="radio"] {
  width: auto;
  margin-right: 0.3em;
}

input[type="search"] {
  -webkit-appearance: none;
  border-radius: 0;
}

input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

.field-container {
  margin-bottom: 1rem;
}

.inline-form fieldset, .inline-form .inline-container {
  position: relative;
}

.inline-form input[type=submit], .inline-form button, .inline-form .btn {
  font-size: 0.875em;
  padding: 0.65rem 1.3rem;
  background: #333333;
  position: absolute;
  top: 0;
  right: 0;
  z-index: 1;
  width: auto;
}

.inline-form input[type=submit]:hover, .inline-form input[type=submit]:focus, .inline-form button:hover, .inline-form button:focus, .inline-form .btn:hover, .inline-form .btn:focus {
  background: gray;
  color: white;
}

.inline-search-results-form {
  width: 100%;
}

@media all and (min-width: 46.8em) {
  .inline-search-results-form {
    width: 82%;
  }
}

.inline-search-results-form fieldset, .inline-search-results-form .inline-container {
  position: relative;
}

.inline-search-results-form input[type=submit], .inline-search-results-form button {
  position: absolute;
  top: 0;
  right: 0;
  z-index: 1;
  width: auto;
}

/* Validation */
.has-error {
  border-color: red;
}

.is-valid {
  border-color: #089e00;
}

body {
  background: #fff;
}

[role=main] {
  padding: 0.5rem 0.5rem 2rem;
  overflow: hidden;
}

/* Layout Container */
.pl, .lc, .header, [role=main] {
  max-width: 75em;
  margin: 0 auto;
  padding: 1em;
}

/*------------------------------------*    $FOOTER
\*------------------------------------*/
.footer {
  clear: both;
  overflow: hidden;
  background: #131313;
  color: white;
  line-height: 1.2;
}

.footer .lc, .footer .header, .footer [role=main] {
  padding: 1rem 1rem 0;
}

.footer a {
  color: #f9f9f9;
}

.nav-footer {
  margin: -1rem -1rem 1rem;
}

.nav-footer li {
  border-bottom: 1px solid #333333;
}

@media all and (min-width: 46.8em) {
  .nav-footer li {
    border: 0;
    float: left;
  }
}

.nav-footer a {
  display: block;
  padding: 1rem;
}

@media all and (min-width: 46.8em) {
  .copyright {
    float: right;
  }
}

/*
// If custom Synapse utilities are needed, use this mixin

@mixin synapse-custom($var) {
  @if ($var == 'margin-auto') {
    margin: 0 auto;
  }
}

*/
/* Grid Container */
.g {
  overflow: hidden;
  margin: 0 -0.5rem;
}

/* Grid Item */
.gi {
  padding: 0.5rem;
}

.gi img {
  display: block;
}

@media all and (min-width: 46.8em) {
  .gi {
    float: left;
  }
}

/* Grid 1up */
.g-1up .gi {
  width: 100%;
}

/* Grid 2up */
@media all and (min-width: 46.8em) {
  .g-2up > .gi {
    float: left;
    width: 50%;
  }
  .g-2up > .gi:nth-of-type(odd) {
    clear: left;
  }
}

/* Grid Half (Always displayed side by side) */
.g-half > .gi {
  float: left;
  width: 50%;
}

.g-half > .gi:nth-of-type(odd) {
  clear: left;
}

/* Grid 3up */
@media all and (min-width: 46.8em) {
  .g-3up > .gi {
    float: left;
    width: 50%;
  }
  .g-3up > .gi:nth-of-type(2n+1) {
    clear: left;
  }
}

@media all and (min-width: 50em) {
  .g-3up > .gi {
    width: 31.3333333%;
  }
  .g-3up > .gi:nth-of-type(2n+1) {
    clear: none;
  }
  .g-3up > .gi:nth-of-type(3n+1) {
    clear: left;
  }
}

/* Grid 4up */
@media all and (min-width: 46.8em) {
  .g-4up > .gi {
    float: left;
    width: 50%;
  }
  .g-4up > .gi:nth-of-type(2n+1) {
    clear: both;
  }
}

@media all and (min-width: 50em) {
  .g-4up > .gi {
    width: 25%;
  }
  .g-4up > .gi:nth-of-type(2n+1) {
    clear: none;
  }
  .g-4up > .gi:nth-of-type(4n+1) {
    clear: left;
  }
}

/* Grid Quarter (Always displayed side by side) */
.g-quarter > .gi {
  float: left;
  width: 24%;
}

.g-quarter > .gi:nth-of-type(4n+1) {
  clear: left;
}

@media all and (min-width: 29.75em) {
  .g-max4 > .gi {
    float: left;
    width: 50%;
  }
  .g-max4 > .gi:nth-of-type(2n+1) {
    clear: both;
  }
}

@media all and (min-width: 39.8em) {
  .g-max4 > .gi {
    width: 33.3333333%;
  }
  .g-max4 > .gi:nth-of-type(2n+1) {
    clear: none;
  }
  .g-max4 > .gi:nth-of-type(3n+1) {
    clear: left;
  }
}

@media all and (min-width: 50em) {
  .g-max4 > .gi {
    width: 25%;
  }
  .g-max4 > .gi:nth-of-type(3n+1) {
    clear: none;
  }
  .g-max4 > .gi:nth-of-type(4n+1) {
    clear: left;
  }
}

/* Grid 5up */
.g-max5 > .gi {
  float: left;
  width: 50%;
}

.g-max5 > .gi:nth-of-type(2n+1) {
  clear: both;
}

@media all and (min-width: 39.8em) {
  .g-max5 > .gi {
    width: 33.3333333%;
  }
  .g-max5 > .gi:nth-of-type(2n+1) {
    clear: none;
  }
  .g-max5 > .gi:nth-of-type(3n+1) {
    clear: left;
  }
}

@media all and (min-width: 46.8em) {
  .g-max5 > .gi {
    width: 25%;
  }
  .g-max5 > .gi:nth-of-type(3n+1) {
    clear: none;
  }
  .g-max5 > .gi:nth-of-type(4n+1) {
    clear: left;
  }
}

@media all and (min-width: 48em) {
  .g-max5 > .gi {
    width: 20%;
  }
  .g-max5 > .gi:nth-of-type(4n+1) {
    clear: none;
  }
  .g-max5 > .gi:nth-of-type(5n+1) {
    clear: left;
  }
}

/* Grid 2/3 */
@media all and (min-width: 46.8em) {
  .gi-2-3 {
    float: left;
    width: 66.666666%;
  }
}

@media all and (min-width: 46.8em) {
  .gi-1-3 {
    float: left;
    width: 33.333333%;
  }
}

/* Grid 4up block */
.g-opposites .gi {
  float: left;
}

.g-opposites .gi:last-child {
  float: right;
  text-align: right;
}

/*------------------------------------*    $PAGE STRUCTURE
\*------------------------------------*/
.header {
  background: white;
  padding: 0;
  border-bottom: 1px solid #dbdbdb;
}

.logo {
  float: left;
  max-width: 8rem;
  margin: 0.4rem;
}

@media all and (min-width: 46.8em) {
  .logo {
    max-width: 9rem;
  }
}

.nav-toggle {
  float: right;
  display: block;
  padding: 0.9rem 1rem 0.7rem;
  font-size: 1.3rem;
  line-height: 1;
  border-left: 1px solid #dbdbdb;
}

@media all and (min-width: 46.8em) {
  .nav-toggle {
    display: none;
  }
}

.search-form {
  overflow: hidden;
  max-height: 0;
}

@media all and (min-width: 46.8em) {
  .search-form {
    float: right;
    max-height: none;
    margin: 0.65em 0.5em 0 0;
  }
}

/*------------------------------------*    $NAVIGATION
\*------------------------------------*/
.nav {
  clear: both;
  overflow: hidden;
  max-height: 0;
}

.nav a {
  display: block;
  padding: 1rem;
  border-top: 1px solid #eeeeee;
}

.nav.active {
  max-height: 40em;
}

@media all and (min-width: 46.8em) {
  .nav {
    max-height: none;
    float: right;
    clear: none;
  }
  .nav li {
    float: left;
  }
  .nav a {
    border: 0;
  }
}

/* Two Column Layout */
@media all and (min-width: 50em) {
  .l-two-col .l-main {
    float: left;
    width: 70%;
    padding-right: 1rem;
    box-sizing: border-box;
  }
}

@media all and (max-width: 50em) {
  .l-two-col .l-sidebar {
    clear: both;
  }
}

@media all and (min-width: 50em) {
  .l-two-col .l-sidebar {
    float: left;
    width: 30%;
    padding: 0 0 0 1rem;
    box-sizing: border-box;
  }
}

.accordion {
  margin-bottom: 1rem;
}

.acc-handle {
  background: #131313;
  color: white;
  font-family: Georgia, Times, "Times New Roman", serif;
  font-weight: bold;
  display: block;
  position: relative;
  padding: 0.5rem;
  border-bottom: 1px solid #dddddd;
}

.acc-handle:after {
  content: "+";
  float: right;
}

.acc-handle:hover {
  color: white;
  background: #333333;
}

.acc-handle.active {
  background: #333333;
}

.acc-handle.active:after {
  content: "-";
}

.alert {
  text-align: center;
  padding: 1rem;
  margin-bottom: .5rem;
  border: 1px solid #808080;
  background: #f9f9f9;
}

.alert-error {
  color: #F00;
  border-color: #F00;
  background: #ffbebe;
}

.section {
  margin: 0 0 1rem;
}

.section-title {
  margin-bottom: 0.5rem;
}

.article-header h1 {
  font-size: 2.5em;
}

.byline {
  font-size: 0.875em;
  font-style: italic;
  margin-bottom: 0.5rem;
}

/* Block */
.block {
  overflow: hidden;
}

.block p:last-child {
  margin-bottom: 0;
}

.headline {
  line-height: 1.2;
}

/* Hero Block */
.block-hero {
  margin-bottom: 0.5rem;
}

.block-hero .b-thumb img {
  display: block;
}

@media all and (min-width: 50em) {
  .block-hero {
    position: relative;
  }
  .block-hero .b-text {
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    background: rgba(0, 0, 0, 0.5);
    color: white;
    padding: 1.5rem;
  }
}

/* Block Thumbnail with Headline */
.block-thumb {
  display: table;
  width: 100%;
  border-collapse: collapse;
}

.block-thumb .b-inner {
  display: table-row;
  vertical-align: top;
  overflow: hidden;
}

@media all and (min-width: 29.75em) {
  .block-thumb .b-thumb {
    display: table-cell;
    vertical-align: top;
    width: 30%;
    max-width: 10em;
  }
  .block-thumb .b-thumb img {
    display: block;
    width: 100%;
    height: auto;
  }
}

@media all and (min-width: 29.75em) {
  .block-thumb .b-text {
    display: table-cell;
    width: 70%;
    padding: 0 1rem;
  }
}

/* Block Headline Summary */
.block-headline-summary a {
  display: block;
  padding: 0.5rem;
}

/* Block Inset */
.block-inset {
  position: relative;
}

.block-inset .b-thumb {
  position: relative;
  z-index: 0;
}

.block-inset .b-thumb img {
  display: block;
}

/* Hero Block */
.block-inset {
  margin-bottom: 0.5rem;
  position: relative;
}

.block-inset .headline {
  font-size: 1.1em;
}

.block-inset .b-text {
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  background: rgba(0, 0, 0, 0.5);
  color: white;
  padding: 0.5rem;
}

/* Block Thumb with Summary */
.block-thumb-summary .b-thumb {
  float: left;
  width: 50%;
}

.block-thumb-summary .b-text {
  margin-left: 50%;
  padding: 0.5rem;
}

.inline-list li {
  display: inline-block;
}

/* Generic Placeholder Brick: REMOVE FOR PRODUCTION */
.brick {
  background: #dcdddc;
  padding: 2rem;
  text-align: center;
  font-weight: bold;
  border-bottom: 1px solid #eeeeee;
}

.pagination {
  overflow: hidden;
}

.pagination li {
  float: left;
  border-right: 1px solid #eeeeee;
}

.pagination li:last-child {
  border: 0;
}

.pagination a {
  padding: 1rem;
}

/* Search Form */
.search-field {
  padding-right: 3em;
}

.inline-form .search-submit {
  background: none;
  padding: 0.78em 1em;
  border: 0;
  border-left: 1px solid gray;
  color: gray;
}

.social-share {
  overflow: hidden;
  margin-bottom: 1rem;
}

.social-share li {
  float: left;
  margin-right: 0.25rem;
}

.social-share a {
  background: #333333;
  color: white;
  display: block;
  padding: 0.5rem;
}

.social-share a:hover {
  background: gray;
}

.tabs {
  overflow: hidden;
}

.tabs ul {
  display: table;
  width: 100%;
}

.tabs li {
  display: table-cell;
  text-align: center;
  border-right: 1px solid #dddddd;
}

.tabs li:last-child {
  border-right: 0;
}

.tabs a {
  display: block;
  padding: 0.5rem;
  background: gray;
}

.tabs a:hover, .tabs a:focus {
  background: #dddddd;
}

.tabs a.active {
  background: #333333;
  color: white;
}

/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uc2NzcyIsInV0aWxzL192YXJzLnNjc3MiLCJ1dGlscy9fdXRpbGl0aWVzLnNjc3MiLCJtYWluLmNzcyIsImJhc2UvX3Jlc2V0LnNjc3MiLCJiYXNlL19ub3JtYWxpemUuc2NzcyIsImJhc2UvX3R5cG9ncmFwaHkuc2NzcyIsIi4uL19ib3dlcl9jb21wb25lbnRzL2JvdXJib24vYXBwL2Fzc2V0cy9zdHlsZXNoZWV0cy9hZGRvbnMvX2ZvbnQtc3RhY2tzLnNjc3MiLCIuLi9fYm93ZXJfY29tcG9uZW50cy9ib3VyYm9uL2FwcC9hc3NldHMvc3R5bGVzaGVldHMvZnVuY3Rpb25zL19zaGFkZS5zY3NzIiwiLi4vX2Jvd2VyX2NvbXBvbmVudHMvYm91cmJvbi9hcHAvYXNzZXRzL3N0eWxlc2hlZXRzL2Z1bmN0aW9ucy9fbW9kdWxhci1zY2FsZS5zY3NzIiwiLi4vX2Jvd2VyX2NvbXBvbmVudHMvYm91cmJvbi9hcHAvYXNzZXRzL3N0eWxlc2hlZXRzL2Z1bmN0aW9ucy9fcHgtdG8tZW0uc2NzcyIsImJhc2UvX2J1dHRvbnMuc2NzcyIsImJhc2UvX2xpc3RzLnNjc3MiLCJiYXNlL19tZWRpYS5zY3NzIiwiYmFzZS9fdGFibGVzLnNjc3MiLCJiYXNlL19mb3Jtcy5zY3NzIiwibGF5b3V0L19ib2R5LnNjc3MiLCJsYXlvdXQvX2Zvb3Rlci5zY3NzIiwibGF5b3V0L19ncmlkLnNjc3MiLCJsYXlvdXQvX2hlYWRlci5zY3NzIiwibGF5b3V0L190d28tY29sLnNjc3MiLCJjb21wb25lbnRzL19hY2NvcmRpb24uc2NzcyIsImNvbXBvbmVudHMvX2FsZXJ0cy5zY3NzIiwiY29tcG9uZW50cy9fYXJ0aWNsZS5zY3NzIiwiY29tcG9uZW50cy9fYmxvY2tzLnNjc3MiLCJjb21wb25lbnRzL19icmljay5zY3NzIiwiY29tcG9uZW50cy9fcGFnaW5hdGlvbi5zY3NzIiwiY29tcG9uZW50cy9fc2VhcmNoLnNjc3MiLCJjb21wb25lbnRzL19zb2NpYWwtc2hhcmUuc2NzcyIs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Qzs7QUFDRDtFQUNFLGdCQUFnQjtDQUNqQjs7QUFDRDtFQUNFLGVBQWU7RUFDZixnQkFBZ0I7RUFDaEIsaUJBQWlCO0NBQ2xCOztBQUNEO0VBQ0Usb0JBQW9CO0NBQ3JCOztBQUNEO0VBQ0Usb0JBQW9CO0VBQ3BCLGFBQWE7Q0FDZCIsImZpbGUiOiJtYWluLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIFxuXG4xLiBSZW1vdmUgdW5uZWVkZWQgcGF0dGVybnMgZnJvbSBmb2xkZXJzIGFuZCBhbnkgZGVwZW5kZW5jaWVzIHRoYXQgdXNlIHRoZW0sIHBsdXMgdGhlaXIgcmVsYXRlZCBDU1NcbjIuIENoZWNrIHRocm91Z2ggYWxsIHJlbWFpbmluZyBwYXR0ZXJucyB0byBzZWUgdGhlaXIgU2FzcyBpcyBhY2NvdW50ZWQgZm9yIGFuZCBvcmdhbml6ZWQgcHJvcGVybHkuXG4gICogTWFrZSBzdXJlIEJFTSBpcyBiZWluZyB1c2VkXG4zLiBHbyB0aHJvdWdoIGFsbCBTQVNTIGZpbGVzIGFuZCBpbXBsZW1lbnRcbiAgKiBVbmlxdWUsIHNjb3BlZCB2YXJpYWJsZXMgZm9yIGtleSBzdHlsZXNcbiAgKiBHbG9iYWwgdmFyaWFibGUgdXNhZ2UgZm9yIHJlbGF0ZWQgZWxlbWVudHNcbiAgKiBJbXBsZW1lbnQgU3luYXBzZSBsYXlvdXQsIHJlbW92ZSBFeHByZXNzaXZlIGxheW91dFxuXG4gKi9cblxuQGltcG9ydFxuJ19ib3dlcl9jb21wb25lbnRzL2JvdXJib24vYXBwL2Fzc2V0cy9zdHlsZXNoZWV0cy9ib3VyYm9uJyxcbidfYm93ZXJfY29tcG9uZW50cy9TeW5hcHNlLUdyaWQvc3luYXBzZS1ncmlkJztcblxuQGltcG9ydFxuJ3V0aWxzL3ZhcnMnLFxuJ3V0aWxzL2Z1bmN0aW9ucycsXG4ndXRpbHMvbWl4aW5zJyxcbid1dGlscy91dGlsaXRpZXMnO1xuXG5cbi8vIFVzZSBTYXNzIG1hcHMgbGlrZSBiZWxvdyBmb3IgZ2xvYmFsIHZhcmlhYmxlc1xuLy8gUmVndWxhciB2YXJzIGZvciBzdHlsaW5nICsgZWRpdGluZyBjb21wb25lbnRzIG9ubHk/XG4vLyBodHRwOi8vd3d3LmJpZ2VuZy5pby9ob3ctd2UtdXNlLXNhc3MtbWFwcy1mb3ItZGVzaWduLXRva2Vucy1hbmQtZGV2ZWxvcGVyLWhhcHBpbmVzcy8/Z29hbD0wXzgwMzgyYmY4YWEtMDkwYTBmZjBkMS00NTIwNzUzMTMmbWNfY2lkPTA5MGEwZmYwZDEmbWNfZWlkPWQxN2QxYWM2Yjlcbi8vIGh0dHA6Ly93d3cuc2l0ZXBvaW50LmNvbS81LWdyZWF0LXVzZXMtc2Fzcy1tYXBzL1xuXG5AaW1wb3J0XG4nYmFzZS9yZXNldCcsXG4nYmFzZS9ub3JtYWxpemUnLFxuJ2Jhc2UvdHlwb2dyYXBoeScsXG4nYmFzZS9idXR0b25zJyxcbidiYXNlL2xpc3RzJyxcbidiYXNlL21lZGlhJyxcbidiYXNlL3RhYmxlcycsXG4nYmFzZS9tZWRpYScsXG4nYmFzZS9mb3Jtcyc7XG5cbkBpbXBvcnRcbidsYXlvdXQvYm9keScsXG4nbGF5b3V0L2Zvb3RlcicsXG4nbGF5b3V0L2dyaWQnLFxuJ2xheW91dC9oZWFkZXInLFxuJ2xheW91dC90d28tY29sJztcblxuQGltcG9ydFxuJ2NvbXBvbmVudHMvYWNjb3JkaW9uJyxcbidjb21wb25lbnRzL2FsZXJ0cycsXG4nY29tcG9uZW50cy9hcnRpY2xlJyxcbidjb21wb25lbnRzL2Jsb2NrcycsXG4nY29tcG9uZW50cy9icmljaycsXG4nY29tcG9uZW50cy9wYWdpbmF0aW9uJyxcbidjb21wb25lbnRzL3NlYXJjaCcsXG4nY29tcG9uZW50cy9zb2NpYWwtc2hhcmUnLFxuJ2NvbXBvbmVudHMvdGFicyc7XG4iLCIvKlxuXG5UaGVzZSBhcmUgYWxsIFNhc3MgbWFwcyB0aGF0IHNldCB0aGUgZ2xvYmFsIHZhcmlhYmxlcyB1c2VkIHRocm91Z2hvdXQgdGhlIHNpdGVcblxuUnVsZXM6XG4xKSBObyBzdHlsZXMgZm9yIGVsZW1lbnRzIGNhbiBiZSBkZWNsYXJlZCBoZXJlXG4yKSBBbnkgdmFyaWFibGVzIG5vdCBpbiBtYXBzIG11c3QgYmUgcHJlZml4ZWQgd2l0aCAnZy0nLCBhbmQgbm90IGJlIHVzZWQgb24gQU5ZIG90aGVyIHN0eWxlc2hlZXQuIFBsZWFzZSBrZWVwIHRoZWlyIG5hbWVzIGFzIHNob3J0IGFzIHBvc3NpYmxlXG4zKSBObyBtYXAgY2FuIHJlZmVyZW5jZSBhIHZhbHVlIGluIGFub3RoZXIgbWFwLCBvbmx5ICdnLScgdmFycyBpZiBuZWVkZWRcbjQpIEFsd2F5cyB1c2UgdGhlc2UgdmFyaWFibGVzIG9uIHRoZWlyIG93bi4gTmV2ZXIgdXNlIHRoZW0gaW4gb3BlcmF0aW9ucyB0byBvdXRwdXQgZGlmZmVyZW50IHZhbHVlcywgbGlrZSBkaXZpZGluZyBvbmUgaW4gaGFsZi4gQWx3YXlzIGFkZCB0aGlzIHZhbHVlIHRvIHRoZSBtYXAgaW5zdGVhZC5cblxuKi9cblxuXG4vLyAtLS0tLSBHcmlkIFZhcmlhYmxlcyAtLS0tLSAvL1xuXG4kYnJlYWtwb2ludC1tYXA6IChcbiAgc21hbGw6IGVtKDQ4MHB4KSxcbiAgbWVkaXVtOiBlbSg3ODdweCksXG4gIGxhcmdlOiBlbSg5MDBweCksXG4gIG1heC13aWR0aDogZW0oMTIwMHB4KVxuKTtcblxuLy8gLS0tLS0gVHlwb2dyYXBoeSBWYXJpYWJsZXMgLS0tLS0gLy9cblxuLy8gQm91cmJvbiB2YXIgdG8gZGV0ZXJtaW5lIHRoZSBtb2R1bGFyIHNjYWxlXG4vLyBpbiB0aGVpciBmdW5jdGlvbiB0byByZXR1cm4gY29uc2lzdGVudCwgc2NhbGVkIHZhbHVlc1xuJG1vZHVsYXItc2NhbGUtcmF0aW86ICRtaW5vci10aGlyZDtcblxuLy8gQm91cmJvbiB2YXIgdG8gc2V0IHRoZSBzdGFydGluZyBmb250IHNpemVcbi8vIGluIHRoZSBtb2R1bGFyIHNjYWxlIGZ1bmN0aW9uc1xuJG1vZHVsYXItc2NhbGUtYmFzZTogZW0oMTZweCk7XG5cbiR0eXBvZ3JhcGh5LW1hcDogKFxuICBmb250LWZhbWlseTogKFxuICAgIHNhbnM6ICRsdWNpZGEtZ3JhbmRlLFxuICAgIHNlcmlmOiAkdmVyZGFuYSxcbiAgICBtb25vOiAkbW9ub3NwYWNlXG4gICksXG5cbiAgZm9udC1zaXplOiAoXG4gICAgaDE6IG1vZHVsYXItc2NhbGUoNiksXG4gICAgaDI6IG1vZHVsYXItc2NhbGUoNSksXG4gICAgaDM6IG1vZHVsYXItc2NhbGUoNCksXG4gICAgaDQ6IG1vZHVsYXItc2NhbGUoMyksXG4gICAgaDU6IG1vZHVsYXItc2NhbGUoMiksXG4gICAgaDY6IG1vZHVsYXItc2NhbGUoMSksXG4gICAgYmFzZTogbW9kdWxhci1zY2FsZSgwKVxuICApLFxuXG4gIGZvbnQtd2VpZ2h0OiAoXG4gICAgYm9sZDogNzAwLFxuICAgIGJhc2U6IDQwMCxcbiAgICBsaWdodDogMTAwXG4gICksXG5cbiAgbGluZS1oZWlnaHQ6IChcbiAgICBoMTogbW9kdWxhci1zY2FsZSgzKSxcbiAgICBoMjogbW9kdWxhci1zY2FsZSgzKSxcbiAgICBoMzogbW9kdWxhci1zY2FsZSgzKSxcbiAgICBoNDogbW9kdWxhci1zY2FsZSgzKSxcbiAgICBoNTogbW9kdWxhci1zY2FsZSgyKSxcbiAgICBoNjogbW9kdWxhci1zY2FsZSgyKSxcbiAgICBiYXNlOiBtb2R1bGFyLXNjYWxlKDIpXG4gICksXG4pO1xuXG5cbi8vIC0tLS0tIENvbG9yIFZhcmlhYmxlcyAtLS0tLSAvL1xuXG4vLyBUaGUgYmFzZSBwcmltYXJ5XG4kZy1wcmltYXJ5LWNvbG9yOiAjOTk5O1xuJGctcHJpbWFyeS1hY3Rpb24tY29sb3I6ICM0NzdkY2E7XG5cblxuLy8gTWFwIGZvciBzdG9yaW5nIGFsbCBjb2xvciB2YXJpYWJsZXNcbiRjb2xvci1tYXA6IChcbiAgcHJpbWFyeTogKFxuICAgIGxpZ2h0ZXN0OiAjZmZmLFxuICAgIGxpZ2h0ZXI6IHRpbnQoJGctcHJpbWFyeS1jb2xvciwgNjAlKSxcbiAgICBsaWdodDogdGludCgkZy1wcmltYXJ5LWNvbG9yLCAxNSUpLFxuICAgIGJhc2U6ICRnLXByaW1hcnktY29sb3IsXG4gICAgZGFyazogc2hhZGUoJGctcHJpbWFyeS1jb2xvciwgMTUlKSxcbiAgICBkYXJrZXI6IHNoYWRlKCRnLXByaW1hcnktY29sb3IsIDYwJSksXG4gICAgZGFya2VzdDogIzAwMFxuICApLFxuXG4gIGFjdGlvbjogKFxuICAgIGJhc2U6ICRnLXByaW1hcnktYWN0aW9uLWNvbG9yLFxuICAgIGhvdmVyOiBzaGFkZSgkZy1wcmltYXJ5LWFjdGlvbi1jb2xvciwgMTUlKVxuICApLFxuKTtcblxuXG5cblxuLy8gLS0tLS0gTGF5b3V0IFZhcmlhYmxlcyAtLS0tLSAvL1xuXG4vLyBMYXlzIG91dCB0aGUgZGlmZmVyZW50IHotaW5kZXggdmFsdWVzIHRvIGhlbHAga2VlcCB0aGVtIG9yZ2FuaXplZC4gQmFzZWQgb2ZmIHdoYXQgY29tbW9tIGVsZW1lbnRzIHRoZXknZCBiZSB1c2VkIGZvci5cbiR6LWxheWVyczogKFxuICBib3R0b21sZXNzLXBpdDogLTk5OTksXG4gIGRlZmF1bHQ6IDEsXG4gIGRyb3Bkb3duOiAzMDAwLFxuICBvdmVybGF5OiA0MDAwLFxuICBtb2RhbDogNDAwMVxuKTtcblxuXG4kZy1iYXNlLXNwYWNpbmc6IDFlbTtcblxuLy8gU3BhY2luZyB1bml0cyBmb3IgcGFkZGluZywgbWFyZ2luLCBldGNcbiRzcGFjaW5nLW1hcDogKFxuICB0cmlwbGU6ICgkZy1iYXNlLXNwYWNpbmcgKiAzKSxcbiAgZG91YmxlOiAoJGctYmFzZS1zcGFjaW5nICogMiksXG5cbiAgYmFzZTogJGctYmFzZS1zcGFjaW5nLFxuXG4gIGhhbGY6ICgkZy1iYXNlLXNwYWNpbmcgLyAyKSxcbiAgdGhpcmQ6ICgkZy1iYXNlLXNwYWNpbmcgLyAzKSxcbiAgcXVhcnRlcjogKCRnLWJhc2Utc3BhY2luZyAvIDQpLFxuICBmaWZ0aDogKCRnLWJhc2Utc3BhY2luZyAvIDUpLFxuICBzaXh0aDogKCRnLWJhc2Utc3BhY2luZyAvIDYpLFxuICBlaWd0aDogKCRnLWJhc2Utc3BhY2luZyAvIDgpXG4pO1xuXG5cbi8vIC0tLS0tIENvbnRhaW5lciBWYXJpYWJsZXMgLS0tLS0gLy9cblxuXG4kY29udGFpbmVycy1tYXA6IChcbiAgYm9yZGVyOiAoXG4gICAgYmFzZTogMXB4IHNvbGlkICRnLXByaW1hcnktY29sb3IsXG4gICAgZGFyazogMXB4IHNvbGlkIHNoYWRlKCRnLXByaW1hcnktY29sb3IsIDE1JSlcbiAgKSxcblxuICBib3JkZXJSYWRpdXM6IChcbiAgICBiYXNlOiAzcHhcbiAgKSxcblxuICBib3JkZXJTdHlsZTogKFxuICAgIGJhc2U6IHNvbGlkXG4gICksXG5cbiAgZHJvcFNoYWRvdzogKFxuICAgIGJhc2U6IDFweCAxcHggM3B4ICMwMDBcbiAgKSxcblxuICBmaWxsOiAoXG4gICAgYmFzZTogdGludCgkZy1wcmltYXJ5LWNvbG9yLCA1MCUpLFxuICAgIGRhcms6IHRpbnQoJGctcHJpbWFyeS1jb2xvciwgMTUlKVxuICApLFxuXG4gIG1hcmdpbjogKFxuICAgIGJhc2U6ICRnLWJhc2Utc3BhY2luZ1xuICApLFxuXG4gIHBhZGRpbmc6IChcbiAgICBiYXNlOiAkZy1iYXNlLXNwYWNpbmcsXG4gICAgbGFyZ2U6ICgkZy1iYXNlLXNwYWNpbmcgKiAyKVxuICApXG4pO1xuIiwiLyogQ2xlYXJmaXggKi9cbi5jZiwgLmwtdHdvLWNvbCwgW3JvbGU9bWFpbl0ge1xuICAqem9vbTogMTtcbn1cblxuLmNmOmJlZm9yZSwgLmwtdHdvLWNvbDpiZWZvcmUsIFtyb2xlPW1haW5dOmJlZm9yZSwgLmNmOmFmdGVyLCAubC10d28tY29sOmFmdGVyLCBbcm9sZT1tYWluXTphZnRlciB7XG4gIGNvbnRlbnQ6IFwiIFwiO1xuICAvKiAxICovXG4gIGRpc3BsYXk6IHRhYmxlO1xuICAvKiAyICovXG59XG5cbi5jZjphZnRlciwgLmwtdHdvLWNvbDphZnRlciwgW3JvbGU9bWFpbl06YWZ0ZXIge1xuICBjbGVhcjogYm90aDtcbn1cblxuLyogQ29tcGxldGVseSByZW1vdmUgZnJvbSB0aGUgZmxvdyBhbmQgc2NyZWVuIHJlYWRlcnMuICovXG4uaXMtaGlkZGVuIHtcbiAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O1xuICB2aXNpYmlsaXR5OiBoaWRkZW4gIWltcG9ydGFudDtcbn1cblxuLyogQ29tcGxldGVseSByZW1vdmUgZnJvbSB0aGUgZmxvdyBidXQgbGVhdmUgYXZhaWxhYmxlIHRvIHNjcmVlbiByZWFkZXJzLiAqL1xuLmlzLXZpc2hpZGRlbiB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZSAhaW1wb3J0YW50O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICB3aWR0aDogMXB4O1xuICBoZWlnaHQ6IDFweDtcbiAgcGFkZGluZzogMDtcbiAgYm9yZGVyOiAwO1xuICBjbGlwOiByZWN0KDFweCwgMXB4LCAxcHgsIDFweCk7XG59XG5cbi8qIEZsb2F0cyAqL1xuLnJpZ2h0IHtcbiAgZmxvYXQ6IHJpZ2h0O1xuICBwYWRkaW5nOiAwIDAgMXJlbSAxcmVtO1xufVxuXG4ucmlnaHQtc2VhcmNoIHtcbiAgZmxvYXQ6IHJpZ2h0O1xuICBwYWRkaW5nOiAwIDAgMXJlbSAwO1xufVxuXG4ubGVmdCB7XG4gIGZsb2F0OiBsZWZ0O1xuICBwYWRkaW5nOiAwIDFyZW0gMXJlbSAwO1xufVxuXG4vKiBUZXh0LUFsaWduICovXG4uYWxpZ24tcmlnaHQge1xuICB0ZXh0LWFsaWduOiByaWdodDtcbn1cblxuLmFsaWduLWNlbnRlciB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLmFsaWduLWxlZnQge1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xufVxuXG4vKiBEaXNwbGF5IENsYXNzZXMgKi9cbkBtZWRpYSBhbGwgYW5kIChtYXgtd2lkdGg6IDQ2LjhlbSkge1xuICAuaGlkZS1zbWFsbCB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxufVxuXG5AbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOiA0Ni44ZW0pIGFuZCAobWF4LXdpZHRoOiA1MGVtKSB7XG4gIC5oaWRlLW1lZCB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxufVxuXG5AbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOiA1MGVtKSB7XG4gIC5oaWRlLWxhcmdlIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG59XG5cbkBtZWRpYSBhbGwgYW5kIChtaW4td2lkdGg6IDY2ZW0pIHtcbiAgLmhpZGUtbGFyZ2UtMiB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxufVxuXG4udmFsaWQge1xuICBjb2xvcjogIzA4OWUwMDtcbn1cblxuLmVycm9yIHtcbiAgY29sb3I6IHJlZDtcbn1cbiIsIi8qIFxuXG4xLiBSZW1vdmUgdW5uZWVkZWQgcGF0dGVybnMgZnJvbSBmb2xkZXJzIGFuZCBhbnkgZGVwZW5kZW5jaWVzIHRoYXQgdXNlIHRoZW0sIHBsdXMgdGhlaXIgcmVsYXRlZCBDU1NcbjIuIENoZWNrIHRocm91Z2ggYWxsIHJlbWFpbmluZyBwYXR0ZXJucyB0byBzZWUgdGhlaXIgU2FzcyBpcyBhY2NvdW50ZWQgZm9yIGFuZCBvcmdhbml6ZWQgcHJvcGVybHkuXG4gICogTWFrZSBzdXJlIEJFTSBpcyBiZWluZyB1c2VkXG4zLiBHbyB0aHJvdWdoIGFsbCBTQVNTIGZpbGVzIGFuZCBpbXBsZW1lbnRcbiAgKiBVbmlxdWUsIHNjb3BlZCB2YXJpYWJsZXMgZm9yIGtleSBzdHlsZXNcbiAgKiBHbG9iYWwgdmFyaWFibGUgdXNhZ2UgZm9yIHJlbGF0ZWQgZWxlbWVudHNcbiAgKiBJbXBsZW1lbnQgU3luYXBzZSBsYXlvdXQsIHJlbW92ZSBFeHByZXNzaXZlIGxheW91dFxuXG4gKi9cbi8qXG5cblRoZXNlIGFyZSBhbGwgU2FzcyBtYXBzIHRoYXQgc2V0IHRoZSBnbG9iYWwgdmFyaWFibGVzIHVzZWQgdGhyb3VnaG91dCB0aGUgc2l0ZVxuXG5SdWxlczpcbjEpIE5vIHN0eWxlcyBmb3IgZWxlbWVudHMgY2FuIGJlIGRlY2xhcmVkIGhlcmVcbjIpIEFueSB2YXJpYWJsZXMgbm90IGluIG1hcHMgbXVzdCBiZSBwcmVmaXhlZCB3aXRoICdnLScsIGFuZCBub3QgYmUgdXNlZCBvbiBBTlkgb3RoZXIgc3R5bGVzaGVldC4gUGxlYXNlIGtlZXAgdGhlaXIgbmFtZXMgYXMgc2hvcnQgYXMgcG9zc2libGVcbjMpIE5vIG1hcCBjYW4gcmVmZXJlbmNlIGEgdmFsdWUgaW4gYW5vdGhlciBtYXAsIG9ubHkgJ2ctJyB2YXJzIGlmIG5lZWRlZFxuNCkgQWx3YXlzIHVzZSB0aGVzZSB2YXJpYWJsZXMgb24gdGhlaXIgb3duLiBOZXZlciB1c2UgdGhlbSBpbiBvcGVyYXRpb25zIHRvIG91dHB1dCBkaWZmZXJlbnQgdmFsdWVzLCBsaWtlIGRpdmlkaW5nIG9uZSBpbiBoYWxmLiBBbHdheXMgYWRkIHRoaXMgdmFsdWUgdG8gdGhlIG1hcCBpbnN0ZWFkLlxuXG4qL1xuLyogQ2xlYXJmaXggKi9cbi5jZiwgLmwtdHdvLWNvbCwgW3JvbGU9bWFpbl0ge1xuICAqem9vbTogMTtcbn1cblxuLmNmOmJlZm9yZSwgLmwtdHdvLWNvbDpiZWZvcmUsIFtyb2xlPW1haW5dOmJlZm9yZSwgLmNmOmFmdGVyLCAubC10d28tY29sOmFmdGVyLCBbcm9sZT1tYWluXTphZnRlciB7XG4gIGNvbnRlbnQ6IFwiIFwiO1xuICAvKiAxICovXG4gIGRpc3BsYXk6IHRhYmxlO1xuICAvKiAyICovXG59XG5cbi5jZjphZnRlciwgLmwtdHdvLWNvbDphZnRlciwgW3JvbGU9bWFpbl06YWZ0ZXIge1xuICBjbGVhcjogYm90aDtcbn1cblxuLyogQ29tcGxldGVseSByZW1vdmUgZnJvbSB0aGUgZmxvdyBhbmQgc2NyZWVuIHJlYWRlcnMuICovXG4uaXMtaGlkZGVuIHtcbiAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O1xuICB2aXNpYmlsaXR5OiBoaWRkZW4gIWltcG9ydGFudDtcbn1cblxuLyogQ29tcGxldGVseSByZW1vdmUgZnJvbSB0aGUgZmxvdyBidXQgbGVhdmUgYXZhaWxhYmxlIHRvIHNjcmVlbiByZWFkZXJzLiAqL1xuLmlzLXZpc2hpZGRlbiB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZSAhaW1wb3J0YW50O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICB3aWR0aDogMXB4O1xuICBoZWlnaHQ6IDFweDtcbiAgcGFkZGluZzogMDtcbiAgYm9yZGVyOiAwO1xuICBjbGlwOiByZWN0KDFweCwgMXB4LCAxcHgsIDFweCk7XG59XG5cbi8qIEZsb2F0cyAqL1xuLnJpZ2h0IHtcbiAgZmxvYXQ6IHJpZ2h0O1xuICBwYWRkaW5nOiAwIDAgMXJlbSAxcmVtO1xufVxuXG4ucmlnaHQtc2VhcmNoIHtcbiAgZmxvYXQ6IHJpZ2h0O1xuICBwYWRkaW5nOiAwIDAgMXJlbSAwO1xufVxuXG4ubGVmdCB7XG4gIGZsb2F0OiBsZWZ0O1xuICBwYWRkaW5nOiAwIDFyZW0gMXJlbSAwO1xufVxuXG4vKiBUZXh0LUFsaWduICovXG4uYWxpZ24tcmlnaHQge1xuICB0ZXh0LWFsaWduOiByaWdodDtcbn1cblxuLmFsaWduLWNlbnRlciB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLmFsaWduLWxlZnQge1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xufVxuXG4vKiBEaXNwbGF5IENsYXNzZXMgKi9cbkBtZWRpYSBhbGwgYW5kIChtYXgtd2lkdGg6IDQ2LjhlbSkge1xuICAuaGlkZS1zbWFsbCB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxufVxuXG5AbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOiA0Ni44ZW0pIGFuZCAobWF4LXdpZHRoOiA1MGVtKSB7XG4gIC5oaWRlLW1lZCB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxufVxuXG5AbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOiA1MGVtKSB7XG4gIC5oaWRlLWxhcmdlIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG59XG5cbkBtZWRpYSBhbGwgYW5kIChtaW4td2lkdGg6IDY2ZW0pIHtcbiAgLmhpZGUtbGFyZ2UtMiB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxufVxuXG4udmFsaWQge1xuICBjb2xvcjogIzA4OWUwMDtcbn1cblxuLmVycm9yIHtcbiAgY29sb3I6IHJlZDtcbn1cblxuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qICAgICRSRVNFVFxuXFwqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbi8qIEJvcmRlci1Cb3ggaHR0cDovcGF1bGlyaXNoLmNvbS8yMDEyL2JveC1zaXppbmctYm9yZGVyLWJveC1mdHcvICovXG4qIHtcbiAgLW1vei1ib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAtd2Via2l0LWJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbmh0bWwsIGJvZHksIGRpdiwgb2JqZWN0LCBpZnJhbWUsIGgxLCBoMiwgaDMsIGg0LCBoNSwgaDYsIHAsIGJsb2NrcXVvdGUsIG9sLCB1bCwgbGksIGZvcm0sIGxlZ2VuZCwgbGFiZWwsIHRhYmxlLCBoZWFkZXIsIGZvb3RlciwgbmF2LCBzZWN0aW9uLCBmaWd1cmUge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG59XG5cbmhlYWRlciwgZm9vdGVyLCBuYXYsIHNlY3Rpb24sIGFydGljbGUsIGhncm91cCwgZmlndXJlIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qISBub3JtYWxpemUuY3NzIHY0LjAuMCB8IE1JVCBMaWNlbnNlIHwgZ2l0aHViLmNvbS9uZWNvbGFzL25vcm1hbGl6ZS5jc3MgKi9cbi8qKlxuICogMS4gQ2hhbmdlIHRoZSBkZWZhdWx0IGZvbnQgZmFtaWx5IGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICogMi4gUHJldmVudCBhZGp1c3RtZW50cyBvZiBmb250IHNpemUgYWZ0ZXIgb3JpZW50YXRpb24gY2hhbmdlcyBpbiBJRSBhbmQgaU9TLlxuICovXG5odG1sIHtcbiAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7XG4gIC8qIDEgKi9cbiAgLW1zLXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XG4gIC8qIDIgKi9cbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBtYXJnaW4gaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKi9cbmJvZHkge1xuICBtYXJnaW46IDA7XG59XG5cbi8qIEhUTUw1IGRpc3BsYXkgZGVmaW5pdGlvbnNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gRWRnZSwgSUUsIGFuZCBGaXJlZm94LlxuICogMi4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUuXG4gKi9cbmFydGljbGUsXG5hc2lkZSxcbmRldGFpbHMsXG5maWdjYXB0aW9uLFxuZmlndXJlLFxuZm9vdGVyLFxuaGVhZGVyLFxubWFpbixcbm1lbnUsXG5uYXYsXG5zZWN0aW9uLFxuc3VtbWFyeSB7XG4gIC8qIDEgKi9cbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXG4gKi9cbmF1ZGlvLFxuY2FudmFzLFxucHJvZ3Jlc3MsXG52aWRlbyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBpT1MgNC03LlxuICovXG5hdWRpbzpub3QoW2NvbnRyb2xzXSkge1xuICBkaXNwbGF5OiBub25lO1xuICBoZWlnaHQ6IDA7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IHZlcnRpY2FsIGFsaWdubWVudCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cbiAqL1xucHJvZ3Jlc3Mge1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTAtLlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUuXG4gKi9cbnRlbXBsYXRlLFxuW2hpZGRlbl0ge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4vKiBMaW5rc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogUmVtb3ZlIHRoZSBncmF5IGJhY2tncm91bmQgb24gYWN0aXZlIGxpbmtzIGluIElFIDEwLlxuICovXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBvdXRsaW5lIG9uIGZvY3VzZWQgbGlua3Mgd2hlbiB0aGV5IGFyZSBhbHNvIGFjdGl2ZSBvciBob3ZlcmVkXG4gKiBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqL1xuYTphY3RpdmUsXG5hOmhvdmVyIHtcbiAgb3V0bGluZS13aWR0aDogMDtcbn1cblxuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIDEuIFJlbW92ZSB0aGUgYm90dG9tIGJvcmRlciBpbiBGaXJlZm94IDM5LS5cbiAqIDIuIEFkZCB0aGUgY29ycmVjdCB0ZXh0IGRlY29yYXRpb24gaW4gQ2hyb21lLCBFZGdlLCBJRSwgT3BlcmEsIGFuZCBTYWZhcmkuXG4gKi9cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTtcbiAgLyogMSAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgLyogMiAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7XG4gIC8qIDIgKi9cbn1cblxuLyoqXG4gKiBQcmV2ZW50IHRoZSBkdXBsaWNhdGUgYXBwbGljYXRpb24gb2YgYGJvbGRlcmAgYnkgdGhlIG5leHQgcnVsZSBpbiBTYWZhcmkgNi5cbiAqL1xuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBpbmhlcml0O1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHdlaWdodCBpbiBDaHJvbWUsIEVkZ2UsIGFuZCBTYWZhcmkuXG4gKi9cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZGVyO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHN0eWxlIGluIEFuZHJvaWQgNC4zLS5cbiAqL1xuZGZuIHtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGZvbnQgc2l6ZSBhbmQgbWFyZ2luIG9uIGBoMWAgZWxlbWVudHMgd2l0aGluIGBzZWN0aW9uYCBhbmRcbiAqIGBhcnRpY2xlYCBjb250ZXh0cyBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBTYWZhcmkuXG4gKi9cbmgxIHtcbiAgZm9udC1zaXplOiAyZW07XG4gIG1hcmdpbjogMC42N2VtIDA7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGJhY2tncm91bmQgYW5kIGNvbG9yIGluIElFIDktLlxuICovXG5tYXJrIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmMDtcbiAgY29sb3I6ICMwMDA7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbnNtYWxsIHtcbiAgZm9udC1zaXplOiA4MCU7XG59XG5cbi8qKlxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgZWxlbWVudHMgZnJvbSBhZmZlY3RpbmcgdGhlIGxpbmUgaGVpZ2h0IGluXG4gKiBhbGwgYnJvd3NlcnMuXG4gKi9cbnN1YixcbnN1cCB7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTtcbn1cblxuc3VwIHtcbiAgdG9wOiAtMC41ZW07XG59XG5cbi8qIEVtYmVkZGVkIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIFJlbW92ZSB0aGUgYm9yZGVyIG9uIGltYWdlcyBpbnNpZGUgbGlua3MgaW4gSUUgMTAtLlxuICovXG5pbWcge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG59XG5cbi8qKlxuICogSGlkZSB0aGUgb3ZlcmZsb3cgaW4gSUUuXG4gKi9cbnN2Zzpub3QoOnJvb3QpIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLyogR3JvdXBpbmcgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xuY29kZSxcbmtiZCxcbnByZSxcbnNhbXAge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7XG4gIC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07XG4gIC8qIDIgKi9cbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgbWFyZ2luIGluIElFIDguXG4gKi9cbmZpZ3VyZSB7XG4gIG1hcmdpbjogMWVtIDQwcHg7XG59XG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gRmlyZWZveC5cbiAqIDIuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UgYW5kIElFLlxuICovXG5ociB7XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICAvKiAxICovXG4gIGhlaWdodDogMDtcbiAgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbiAgLyogMiAqL1xufVxuXG4vKiBGb3Jtc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogQ2hhbmdlIGZvbnQgcHJvcGVydGllcyB0byBgaW5oZXJpdGAgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKi9cbmJ1dHRvbixcbmlucHV0LFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBmb250OiBpbmhlcml0O1xufVxuXG4vKipcbiAqIFJlc3RvcmUgdGhlIGZvbnQgd2VpZ2h0IHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxuICovXG5vcHRncm91cCB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4vKipcbiAqIFNob3cgdGhlIG92ZXJmbG93IGluIElFLlxuICogMS4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZS5cbiAqIDIuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UsIEZpcmVmb3gsIGFuZCBJRS5cbiAqL1xuYnV0dG9uLFxuaW5wdXQsXG5zZWxlY3Qge1xuICAvKiAyICovXG4gIG92ZXJmbG93OiB2aXNpYmxlO1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgbWFyZ2luIGluIFNhZmFyaS5cbiAqIDEuIFJlbW92ZSB0aGUgbWFyZ2luIGluIEZpcmVmb3ggYW5kIFNhZmFyaS5cbiAqL1xuYnV0dG9uLFxuaW5wdXQsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIC8qIDEgKi9cbiAgbWFyZ2luOiAwO1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5oZXJpdGVuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRWRnZSwgRmlyZWZveCwgYW5kIElFLlxuICogMS4gUmVtb3ZlIHRoZSBpbmhlcml0ZW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBGaXJlZm94LlxuICovXG5idXR0b24sXG5zZWxlY3Qge1xuICAvKiAxICovXG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xufVxuXG4vKipcbiAqIENoYW5nZSB0aGUgY3Vyc29yIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICovXG5idXR0b24sXG5bdHlwZT1cImJ1dHRvblwiXSxcblt0eXBlPVwicmVzZXRcIl0sXG5bdHlwZT1cInN1Ym1pdFwiXSB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuLyoqXG4gKiBSZXN0b3JlIHRoZSBkZWZhdWx0IGN1cnNvciB0byBkaXNhYmxlZCBlbGVtZW50cyB1bnNldCBieSB0aGUgcHJldmlvdXMgcnVsZS5cbiAqL1xuW2Rpc2FibGVkXSB7XG4gIGN1cnNvcjogZGVmYXVsdDtcbn1cblxuLyoqXG4gKiAxLiBQcmV2ZW50IGEgV2ViS2l0IGJ1ZyB3aGVyZSAoMikgZGVzdHJveXMgbmF0aXZlIGBhdWRpb2AgYW5kIGB2aWRlb2BcbiAqICAgIGNvbnRyb2xzIGluIEFuZHJvaWQgNC5cbiAqIDIuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TLlxuICovXG5idXR0b24sXG5odG1sIFt0eXBlPVwiYnV0dG9uXCJdLFxuW3R5cGU9XCJyZXNldFwiXSxcblt0eXBlPVwic3VibWl0XCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XG4gIC8qIDIgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGlubmVyIGJvcmRlciBhbmQgcGFkZGluZyBpbiBGaXJlZm94LlxuICovXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsXG5pbnB1dDo6LW1vei1mb2N1cy1pbm5lciB7XG4gIGJvcmRlcjogMDtcbiAgcGFkZGluZzogMDtcbn1cblxuLyoqXG4gKiBSZXN0b3JlIHRoZSBmb2N1cyBzdHlsZXMgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXG4gKi9cbmJ1dHRvbjotbW96LWZvY3VzcmluZyxcbmlucHV0Oi1tb3otZm9jdXNyaW5nIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0O1xufVxuXG4vKipcbiAqIENoYW5nZSB0aGUgYm9yZGVyLCBtYXJnaW4sIGFuZCBwYWRkaW5nIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICovXG5maWVsZHNldCB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNjMGMwYzA7XG4gIG1hcmdpbjogMCAycHg7XG4gIHBhZGRpbmc6IDAuMzVlbSAwLjYyNWVtIDAuNzVlbTtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSB0ZXh0IHdyYXBwaW5nIGluIEVkZ2UgYW5kIElFLlxuICogMi4gQ29ycmVjdCB0aGUgY29sb3IgaW5oZXJpdGFuY2UgZnJvbSBgZmllbGRzZXRgIGVsZW1lbnRzIGluIElFLlxuICogMy4gUmVtb3ZlIHRoZSBwYWRkaW5nIHNvIGRldmVsb3BlcnMgYXJlIG5vdCBjYXVnaHQgb3V0IHdoZW4gdGhleSB6ZXJvIG91dFxuICogICAgYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbmxlZ2VuZCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIC8qIDEgKi9cbiAgY29sb3I6IGluaGVyaXQ7XG4gIC8qIDIgKi9cbiAgZGlzcGxheTogdGFibGU7XG4gIC8qIDEgKi9cbiAgbWF4LXdpZHRoOiAxMDAlO1xuICAvKiAxICovXG4gIHBhZGRpbmc6IDA7XG4gIC8qIDMgKi9cbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcbiAgLyogMSAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUuXG4gKi9cbnRleHRhcmVhIHtcbiAgb3ZlcmZsb3c6IGF1dG87XG59XG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gSUUgMTAtLlxuICogMi4gUmVtb3ZlIHRoZSBwYWRkaW5nIGluIElFIDEwLS5cbiAqL1xuW3R5cGU9XCJjaGVja2JveFwiXSxcblt0eXBlPVwicmFkaW9cIl0ge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAvKiAxICovXG4gIHBhZGRpbmc6IDA7XG4gIC8qIDIgKi9cbn1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBjdXJzb3Igc3R5bGUgb2YgaW5jcmVtZW50IGFuZCBkZWNyZW1lbnQgYnV0dG9ucyBpbiBDaHJvbWUuXG4gKi9cblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xuICBoZWlnaHQ6IGF1dG87XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgb2RkIGFwcGVhcmFuY2Ugb2Ygc2VhcmNoIGlucHV0cyBpbiBDaHJvbWUgYW5kIFNhZmFyaS5cbiAqL1xuW3R5cGU9XCJzZWFyY2hcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDtcbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGlubmVyIHBhZGRpbmcgYW5kIGNhbmNlbCBidXR0b25zIGluIENocm9tZSBvbiBPUyBYIGFuZFxuICogU2FmYXJpIG9uIE9TIFguXG4gKi9cblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1jYW5jZWwtYnV0dG9uLFxuW3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG59XG5cbmJvZHkge1xuICBmb250LWZhbWlseTogXCJMdWNpZGEgR3JhbmRlXCIsIFwiVGFob21hXCIsIFwiVmVyZGFuYVwiLCBcIkFyaWFsXCIsIHNhbnMtc2VyaWY7XG4gIGNvbG9yOiAjMDAwO1xufVxuXG4vKiBMaW5rcyAqL1xuYSB7XG4gIGNvbG9yOiAjNDc3ZGNhO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIG91dGxpbmU6IDA7XG59XG5cbmE6aG92ZXIsIGE6Zm9jdXMge1xuICBjb2xvcjogIzNjNmFhYztcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG59XG5cbi8qIEhlYWRpbmdzICovXG5oMSxcbmgyLFxuaDMsXG5oNCxcbmg1LFxuaDYge1xuICBmb250LWZhbWlseTogXCJWZXJkYW5hXCIsIFwiR2VuZXZhXCIsIHNhbnMtc2VyaWY7XG59XG5cbmgxLCAuYWxwaGEge1xuICBmb250LXNpemU6IDIuOTg1OThlbTtcbiAgbGluZS1oZWlnaHQ6IDEuNzI4ZW07XG59XG5cbmgyLCAuYmV0YSB7XG4gIGZvbnQtc2l6ZTogMi40ODgzMmVtO1xuICBsaW5lLWhlaWdodDogMS43MjhlbTtcbn1cblxuaDMsIC5nYW1tYSB7XG4gIGZvbnQtc2l6ZTogMi4wNzM2ZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjcyOGVtO1xufVxuXG5oNCB7XG4gIGZvbnQtc2l6ZTogMS43MjhlbTtcbiAgbGluZS1oZWlnaHQ6IDEuNzI4ZW07XG59XG5cbmg1IHtcbiAgZm9udC1zaXplOiAxLjQ0ZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjQ0ZW07XG59XG5cbmg2IHtcbiAgZm9udC1zaXplOiAxLjJlbTtcbiAgbGluZS1oZWlnaHQ6IDEuNDRlbTtcbn1cblxuLyogU3ViaGVhZGluZ3MgKi9cbi5zdWJoZWFkaW5nIHtcbiAgZm9udC1mYW1pbHk6IFwiTHVjaWRhIEdyYW5kZVwiLCBcIlRhaG9tYVwiLCBcIlZlcmRhbmFcIiwgXCJBcmlhbFwiLCBzYW5zLXNlcmlmO1xuICBmb250LXdlaWdodDogNzAwO1xufVxuXG4vKiBUZXh0LVJlbGF0ZWQgRWxlbWVudHMgKi9cbnAge1xuICBtYXJnaW4tYm90dG9tOiAxcmVtO1xuICBmb250LXNpemU6IDFlbTtcbiAgbGluZS1oZWlnaHQ6IDEuNDRlbTtcbn1cblxuLyogQmxvY2txdW90ZSAqL1xuYmxvY2txdW90ZSB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbiAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCBncmF5O1xuICBjb2xvcjogZ3JheTtcbiAgcGFkZGluZy1sZWZ0OiAxcmVtO1xuICBtYXJnaW4tYm90dG9tOiAxcmVtO1xufVxuXG4vKiBIb3Jpem9udGFsIFJ1bGUgKi9cbmhyIHtcbiAgYm9yZGVyOiAwO1xuICBoZWlnaHQ6IDJweDtcbiAgYmFja2dyb3VuZDogI2VlZWVlZTtcbiAgbWFyZ2luOiAycmVtIDA7XG59XG5cbmFiYnIge1xuICBib3JkZXItYm90dG9tOiAxcHggZG90dGVkIGdyYXk7XG4gIGN1cnNvcjogaGVscDtcbn1cblxuLyogR2xvYmFsIEZvbnQgQ2xhc3NlcyAqL1xuLmZvbnQtc2Vjb25kYXJ5IHtcbiAgZm9udC1mYW1pbHk6IEdlb3JnaWEsIFRpbWVzLCBcIlRpbWVzIE5ldyBSb21hblwiLCBzZXJpZjtcbn1cblxuLmludHJvIHtcbiAgZm9udC1zaXplOiAxLjA2MjVlbTtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi5wdWxscXVvdGUge1xuICBmb250LWZhbWlseTogR2VvcmdpYSwgVGltZXMsIFwiVGltZXMgTmV3IFJvbWFuXCIsIHNlcmlmO1xuICBmb250LXNpemU6IDEuNDM3NWVtO1xufVxuXG4udGV4dCBhIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG59XG5cbi50ZXh0IHVsIHtcbiAgbGlzdC1zdHlsZTogZGlzYztcbiAgbWFyZ2luOiAwIDAgMXJlbSAxLjJlbTtcbn1cblxuLnRleHQgdWwgdWwge1xuICBtYXJnaW4tYm90dG9tOiAwO1xufVxuXG4udGV4dCBvbCB7XG4gIGxpc3Qtc3R5bGU6IGRlY2ltYWw7XG4gIG1hcmdpbjogMCAwIDFyZW0gMS4yZW07XG59XG5cbi50ZXh0IG9sIG9sIHtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbn1cblxuLmJ0biB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgYmFja2dyb3VuZDogIzMzMzMzMztcbiAgY29sb3I6IHdoaXRlO1xuICBsaW5lLWhlaWdodDogMTtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIHBhZGRpbmc6IDFyZW07XG4gIGJvcmRlcjogMDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4uYnRuOmhvdmVyLCAuYnRuOmZvY3VzIHtcbiAgY29sb3I6IHdoaXRlO1xufVxuXG4uYnRuLmRpc2FibGVkIHtcbiAgYmFja2dyb3VuZDogI2VlZWVlZTtcbiAgY29sb3I6ICNiYmJiYmI7XG59XG5cbi5idG4tc21hbGwge1xuICBwYWRkaW5nOiAwLjVyZW07XG59XG5cbi5idG4tbGFyZ2Uge1xuICBwYWRkaW5nOiAwLjVyZW07XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGJhY2tncm91bmQ6IGdyYXk7XG4gIGZvbnQtc2l6ZTogMS40cmVtO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xufVxuXG4udGV4dC1idG4ge1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG59XG5cbm9sLCB1bCB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbn1cblxuLyogRGVmaW5pdGlvbiBMaXN0cyAqL1xuZGwge1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBtYXJnaW46IDAgMCAxcmVtO1xufVxuXG5kdCB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG5kZCB7XG4gIG1hcmdpbi1sZWZ0OiAwO1xufVxuXG4vKiBIZWFkbGluZSBMaXN0ICovXG4uaGVhZGxpbmUtbGlzdCB7XG4gIG1hcmdpbi1ib3R0b206IDFyZW07XG59XG5cbi5oZWFkbGluZS1saXN0LmZsdXNoIHtcbiAgbWFyZ2luOiAwO1xufVxuXG4uaGVhZGxpbmUtbGlzdCBoNCB7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG59XG5cbi5oZWFkbGluZS1saXN0IGxpIHtcbiAgcGFkZGluZzogMC4yNXJlbSAwO1xuICBib3JkZXItdG9wOiAxcHggc29saWQgI2RkZGRkZDtcbn1cblxuLyogUG9zdCBMaXN0ICovXG4ucG9zdC1saXN0IGxpIHtcbiAgbWFyZ2luLWJvdHRvbTogMXJlbTtcbn1cblxuLyogQnVsbGV0IExpc3QgKi9cbi5idWxsZXQtbGlzdCB7XG4gIGxpc3Qtc3R5bGU6IHNxdWFyZTtcbiAgbWFyZ2luOiAwIDAgMWVtIDEuMmVtO1xuICBsaW5lLWhlaWdodDogMS4zO1xufVxuXG4uYnVsbGV0LWxpc3QgbGkge1xuICBtYXJnaW4tYm90dG9tOiAxcmVtO1xufVxuXG4vKiBUZXh0IExpc3QgKi9cbi50ZXh0LWxpc3Qge1xuICBtYXJnaW46IDAgMCAxZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjM7XG59XG5cbi50ZXh0LWxpc3QgbGkge1xuICBtYXJnaW4tYm90dG9tOiAxcmVtO1xufVxuXG4udG9vbHRpcC1jb250YWluZXIge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLnRvb2x0aXAtY29udGFpbmVyOmhvdmVyIC50b29sdGlwIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi50b29sdGlwLWxpbmsge1xuICBiYWNrZ3JvdW5kOiAjZjlmOWY5O1xufVxuXG4udG9vbHRpcCB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAxLjVlbTtcbiAgbGVmdDogMDtcbiAgd2lkdGg6IDE4ZW07XG4gIHBhZGRpbmc6IDFyZW07XG4gIGJhY2tncm91bmQ6IHdoaXRlO1xuICBib3JkZXI6IDFweCBzb2xpZCBncmF5O1xuICBib3gtc2hhZG93OiAwLjNlbSAwLjNlbSAxZW0gMCByZ2JhKDAsIDAsIDAsIDAuMik7XG59XG5cbi50b29sdGlwIGgyIHtcbiAgbWFyZ2luLXRvcDogMDtcbn1cblxuQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDogMjRlbSkge1xuICAudG9vbHRpcCB7XG4gICAgd2lkdGg6IDIyZW07XG4gIH1cbn1cblxuQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDogMjkuNzVlbSkge1xuICAudG9vbHRpcCB7XG4gICAgd2lkdGg6IDI3ZW07XG4gIH1cbn1cblxuQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDogMzkuOGVtKSB7XG4gIC50b29sdGlwIHtcbiAgICB3aWR0aDogMzBlbTtcbiAgfVxufVxuXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSogICAgJE1FRElBIEVMRU1FTlRTXG5cXCotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuLyogRmxleGlibGUgTWVkaWEgKi9cbmltZywgdmlkZW8sIG9iamVjdCB7XG4gIG1heC13aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiBhdXRvO1xufVxuXG5pZnJhbWUge1xuICBtYXJnaW4tYm90dG9tOiAxcmVtO1xufVxuXG5maWd1cmUge1xuICBtYXJnaW4tYm90dG9tOiAxcmVtO1xufVxuXG5maWd1cmUgaW1nIHtcbiAgbWFyZ2luLWJvdHRvbTogMC4yNXJlbTtcbn1cblxuZmlnY2FwdGlvbiB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cblxuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qICAgICRUYWJsZVxuXFwqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbnRhYmxlIHtcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcbiAgZm9udC1mZWF0dXJlLXNldHRpbmdzOiAna2VybicsICdsaWdhJywgJ3RudW0nO1xuICBtYXJnaW46IDAuNWVtO1xuICB0YWJsZS1sYXlvdXQ6IGZpeGVkO1xuICB3aWR0aDogMTAwJTtcbn1cblxudGgge1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgIzk5OTtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgcGFkZGluZzogMWVtIDA7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG59XG5cbnRkIHtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICM5OTk7XG4gIHBhZGRpbmc6IDFlbSAwO1xufVxuXG50cixcbnRkLFxudGgge1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xufVxuXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSogICAgJE1FRElBIEVMRU1FTlRTXG5cXCotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuLyogRmxleGlibGUgTWVkaWEgKi9cbmltZywgdmlkZW8sIG9iamVjdCB7XG4gIG1heC13aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiBhdXRvO1xufVxuXG5pZnJhbWUge1xuICBtYXJnaW4tYm90dG9tOiAxcmVtO1xufVxuXG5maWd1cmUge1xuICBtYXJnaW4tYm90dG9tOiAxcmVtO1xufVxuXG5maWd1cmUgaW1nIHtcbiAgbWFyZ2luLWJvdHRvbTogMC4yNXJlbTtcbn1cblxuZmlnY2FwdGlvbiB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cblxuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qICAgICRGT1JNU1xuXFwqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbmZvcm0gPiBkaXYge1xuICBtYXJnaW4tYm90dG9tOiAxcmVtO1xufVxuXG5mb3JtIG9sLCBmb3JtIHVsIHtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbiAgbWFyZ2luLWxlZnQ6IDA7XG59XG5cbmZpZWxkc2V0IHtcbiAgYm9yZGVyOiAwO1xuICBwYWRkaW5nOiAwO1xuICBtYXJnaW46IDA7XG59XG5cbmxhYmVsIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBhZGRpbmctYm90dG9tOiAwLjI1cmVtO1xufVxuXG5idXR0b24sIGlucHV0LCBzZWxlY3QsIHRleHRhcmVhIHtcbiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gIGZvbnQtc2l6ZTogMTAwJTtcbiAgbWFyZ2luOiAwO1xufVxuXG5pbnB1dCwgdGV4dGFyZWEge1xuICB3aWR0aDogMTAwJTtcbiAgYm9yZGVyOiAxcHggc29saWQgZ3JheTtcbiAgcGFkZGluZzogMC41cmVtIDAuNjVyZW07XG59XG5cbmlucHV0W3R5cGU9dGV4dF0sIGlucHV0W3R5cGU9c2VhcmNoXSwgaW5wdXRbdHlwZT11cmxdLCBpbnB1dFt0eXBlPW51bWJlcl0sIHRleHRhcmVhIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xufVxuXG5idXR0b24sIGlucHV0W3R5cGU9XCJzdWJtaXRcIl0ge1xuICBwYWRkaW5nOiAwLjVyZW07XG4gIGJhY2tncm91bmQ6ICMzMzMzMzM7XG4gIGJvcmRlcjogMXB4IHNvbGlkIGdyYXk7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuaW5wdXRbdHlwZT1cImNoZWNrYm94XCJdLFxuaW5wdXRbdHlwZT1cInJhZGlvXCJdIHtcbiAgd2lkdGg6IGF1dG87XG4gIG1hcmdpbi1yaWdodDogMC4zZW07XG59XG5cbmlucHV0W3R5cGU9XCJzZWFyY2hcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG4gIGJvcmRlci1yYWRpdXM6IDA7XG59XG5cbmlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24sXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xufVxuXG4uZmllbGQtY29udGFpbmVyIHtcbiAgbWFyZ2luLWJvdHRvbTogMXJlbTtcbn1cblxuLmlubGluZS1mb3JtIGZpZWxkc2V0LCAuaW5saW5lLWZvcm0gLmlubGluZS1jb250YWluZXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi5pbmxpbmUtZm9ybSBpbnB1dFt0eXBlPXN1Ym1pdF0sIC5pbmxpbmUtZm9ybSBidXR0b24sIC5pbmxpbmUtZm9ybSAuYnRuIHtcbiAgZm9udC1zaXplOiAwLjg3NWVtO1xuICBwYWRkaW5nOiAwLjY1cmVtIDEuM3JlbTtcbiAgYmFja2dyb3VuZDogIzMzMzMzMztcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIHJpZ2h0OiAwO1xuICB6LWluZGV4OiAxO1xuICB3aWR0aDogYXV0bztcbn1cblxuLmlubGluZS1mb3JtIGlucHV0W3R5cGU9c3VibWl0XTpob3ZlciwgLmlubGluZS1mb3JtIGlucHV0W3R5cGU9c3VibWl0XTpmb2N1cywgLmlubGluZS1mb3JtIGJ1dHRvbjpob3ZlciwgLmlubGluZS1mb3JtIGJ1dHRvbjpmb2N1cywgLmlubGluZS1mb3JtIC5idG46aG92ZXIsIC5pbmxpbmUtZm9ybSAuYnRuOmZvY3VzIHtcbiAgYmFja2dyb3VuZDogZ3JheTtcbiAgY29sb3I6IHdoaXRlO1xufVxuXG4uaW5saW5lLXNlYXJjaC1yZXN1bHRzLWZvcm0ge1xuICB3aWR0aDogMTAwJTtcbn1cblxuQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDogNDYuOGVtKSB7XG4gIC5pbmxpbmUtc2VhcmNoLXJlc3VsdHMtZm9ybSB7XG4gICAgd2lkdGg6IDgyJTtcbiAgfVxufVxuXG4uaW5saW5lLXNlYXJjaC1yZXN1bHRzLWZvcm0gZmllbGRzZXQsIC5pbmxpbmUtc2VhcmNoLXJlc3VsdHMtZm9ybSAuaW5saW5lLWNvbnRhaW5lciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLmlubGluZS1zZWFyY2gtcmVzdWx0cy1mb3JtIGlucHV0W3R5cGU9c3VibWl0XSwgLmlubGluZS1zZWFyY2gtcmVzdWx0cy1mb3JtIGJ1dHRvbiB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICByaWdodDogMDtcbiAgei1pbmRleDogMTtcbiAgd2lkdGg6IGF1dG87XG59XG5cbi8qIFZhbGlkYXRpb24gKi9cbi5oYXMtZXJyb3Ige1xuICBib3JkZXItY29sb3I6IHJlZDtcbn1cblxuLmlzLXZhbGlkIHtcbiAgYm9yZGVyLWNvbG9yOiAjMDg5ZTAwO1xufVxuXG5ib2R5IHtcbiAgYmFja2dyb3VuZDogI2ZmZjtcbn1cblxuW3JvbGU9bWFpbl0ge1xuICBwYWRkaW5nOiAwLjVyZW0gMC41cmVtIDJyZW07XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbi8qIExheW91dCBDb250YWluZXIgKi9cbi5wbCwgLmxjLCAuaGVhZGVyLCBbcm9sZT1tYWluXSB7XG4gIG1heC13aWR0aDogNzVlbTtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHBhZGRpbmc6IDFlbTtcbn1cblxuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qICAgICRGT09URVJcblxcKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4uZm9vdGVyIHtcbiAgY2xlYXI6IGJvdGg7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGJhY2tncm91bmQ6ICMxMzEzMTM7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgbGluZS1oZWlnaHQ6IDEuMjtcbn1cblxuLmZvb3RlciAubGMsIC5mb290ZXIgLmhlYWRlciwgLmZvb3RlciBbcm9sZT1tYWluXSB7XG4gIHBhZGRpbmc6IDFyZW0gMXJlbSAwO1xufVxuXG4uZm9vdGVyIGEge1xuICBjb2xvcjogI2Y5ZjlmOTtcbn1cblxuLm5hdi1mb290ZXIge1xuICBtYXJnaW46IC0xcmVtIC0xcmVtIDFyZW07XG59XG5cbi5uYXYtZm9vdGVyIGxpIHtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICMzMzMzMzM7XG59XG5cbkBtZWRpYSBhbGwgYW5kIChtaW4td2lkdGg6IDQ2LjhlbSkge1xuICAubmF2LWZvb3RlciBsaSB7XG4gICAgYm9yZGVyOiAwO1xuICAgIGZsb2F0OiBsZWZ0O1xuICB9XG59XG5cbi5uYXYtZm9vdGVyIGEge1xuICBkaXNwbGF5OiBibG9jaztcbiAgcGFkZGluZzogMXJlbTtcbn1cblxuQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDogNDYuOGVtKSB7XG4gIC5jb3B5cmlnaHQge1xuICAgIGZsb2F0OiByaWdodDtcbiAgfVxufVxuXG4vKlxuLy8gSWYgY3VzdG9tIFN5bmFwc2UgdXRpbGl0aWVzIGFyZSBuZWVkZWQsIHVzZSB0aGlzIG1peGluXG5cbkBtaXhpbiBzeW5hcHNlLWN1c3RvbSgkdmFyKSB7XG4gIEBpZiAoJHZhciA9PSAnbWFyZ2luLWF1dG8nKSB7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gIH1cbn1cblxuKi9cbi8qIEdyaWQgQ29udGFpbmVyICovXG4uZyB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIG1hcmdpbjogMCAtMC41cmVtO1xufVxuXG4vKiBHcmlkIEl0ZW0gKi9cbi5naSB7XG4gIHBhZGRpbmc6IDAuNXJlbTtcbn1cblxuLmdpIGltZyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG5AbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOiA0Ni44ZW0pIHtcbiAgLmdpIHtcbiAgICBmbG9hdDogbGVmdDtcbiAgfVxufVxuXG4vKiBHcmlkIDF1cCAqL1xuLmctMXVwIC5naSB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4vKiBHcmlkIDJ1cCAqL1xuQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDogNDYuOGVtKSB7XG4gIC5nLTJ1cCA+IC5naSB7XG4gICAgZmxvYXQ6IGxlZnQ7XG4gICAgd2lkdGg6IDUwJTtcbiAgfVxuICAuZy0ydXAgPiAuZ2k6bnRoLW9mLXR5cGUob2RkKSB7XG4gICAgY2xlYXI6IGxlZnQ7XG4gIH1cbn1cblxuLyogR3JpZCBIYWxmIChBbHdheXMgZGlzcGxheWVkIHNpZGUgYnkgc2lkZSkgKi9cbi5nLWhhbGYgPiAuZ2kge1xuICBmbG9hdDogbGVmdDtcbiAgd2lkdGg6IDUwJTtcbn1cblxuLmctaGFsZiA+IC5naTpudGgtb2YtdHlwZShvZGQpIHtcbiAgY2xlYXI6IGxlZnQ7XG59XG5cbi8qIEdyaWQgM3VwICovXG5AbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOiA0Ni44ZW0pIHtcbiAgLmctM3VwID4gLmdpIHtcbiAgICBmbG9hdDogbGVmdDtcbiAgICB3aWR0aDogNTAlO1xuICB9XG4gIC5nLTN1cCA+IC5naTpudGgtb2YtdHlwZSgybisxKSB7XG4gICAgY2xlYXI6IGxlZnQ7XG4gIH1cbn1cblxuQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDogNTBlbSkge1xuICAuZy0zdXAgPiAuZ2kge1xuICAgIHdpZHRoOiAzMS4zMzMzMzMzJTtcbiAgfVxuICAuZy0zdXAgPiAuZ2k6bnRoLW9mLXR5cGUoMm4rMSkge1xuICAgIGNsZWFyOiBub25lO1xuICB9XG4gIC5nLTN1cCA+IC5naTpudGgtb2YtdHlwZSgzbisxKSB7XG4gICAgY2xlYXI6IGxlZnQ7XG4gIH1cbn1cblxuLyogR3JpZCA0dXAgKi9cbkBtZWRpYSBhbGwgYW5kIChtaW4td2lkdGg6IDQ2LjhlbSkge1xuICAuZy00dXAgPiAuZ2kge1xuICAgIGZsb2F0OiBsZWZ0O1xuICAgIHdpZHRoOiA1MCU7XG4gIH1cbiAgLmctNHVwID4gLmdpOm50aC1vZi10eXBlKDJuKzEpIHtcbiAgICBjbGVhcjogYm90aDtcbiAgfVxufVxuXG5AbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOiA1MGVtKSB7XG4gIC5nLTR1cCA+IC5naSB7XG4gICAgd2lkdGg6IDI1JTtcbiAgfVxuICAuZy00dXAgPiAuZ2k6bnRoLW9mLXR5cGUoMm4rMSkge1xuICAgIGNsZWFyOiBub25lO1xuICB9XG4gIC5nLTR1cCA+IC5naTpudGgtb2YtdHlwZSg0bisxKSB7XG4gICAgY2xlYXI6IGxlZnQ7XG4gIH1cbn1cblxuLyogR3JpZCBRdWFydGVyIChBbHdheXMgZGlzcGxheWVkIHNpZGUgYnkgc2lkZSkgKi9cbi5nLXF1YXJ0ZXIgPiAuZ2kge1xuICBmbG9hdDogbGVmdDtcbiAgd2lkdGg6IDI0JTtcbn1cblxuLmctcXVhcnRlciA+IC5naTpudGgtb2YtdHlwZSg0bisxKSB7XG4gIGNsZWFyOiBsZWZ0O1xufVxuXG5AbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOiAyOS43NWVtKSB7XG4gIC5nLW1heDQgPiAuZ2kge1xuICAgIGZsb2F0OiBsZWZ0O1xuICAgIHdpZHRoOiA1MCU7XG4gIH1cbiAgLmctbWF4NCA+IC5naTpudGgtb2YtdHlwZSgybisxKSB7XG4gICAgY2xlYXI6IGJvdGg7XG4gIH1cbn1cblxuQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDogMzkuOGVtKSB7XG4gIC5nLW1heDQgPiAuZ2kge1xuICAgIHdpZHRoOiAzMy4zMzMzMzMzJTtcbiAgfVxuICAuZy1tYXg0ID4gLmdpOm50aC1vZi10eXBlKDJuKzEpIHtcbiAgICBjbGVhcjogbm9uZTtcbiAgfVxuICAuZy1tYXg0ID4gLmdpOm50aC1vZi10eXBlKDNuKzEpIHtcbiAgICBjbGVhcjogbGVmdDtcbiAgfVxufVxuXG5AbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOiA1MGVtKSB7XG4gIC5nLW1heDQgPiAuZ2kge1xuICAgIHdpZHRoOiAyNSU7XG4gIH1cbiAgLmctbWF4NCA+IC5naTpudGgtb2YtdHlwZSgzbisxKSB7XG4gICAgY2xlYXI6IG5vbmU7XG4gIH1cbiAgLmctbWF4NCA+IC5naTpudGgtb2YtdHlwZSg0bisxKSB7XG4gICAgY2xlYXI6IGxlZnQ7XG4gIH1cbn1cblxuLyogR3JpZCA1dXAgKi9cbi5nLW1heDUgPiAuZ2kge1xuICBmbG9hdDogbGVmdDtcbiAgd2lkdGg6IDUwJTtcbn1cblxuLmctbWF4NSA+IC5naTpudGgtb2YtdHlwZSgybisxKSB7XG4gIGNsZWFyOiBib3RoO1xufVxuXG5AbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOiAzOS44ZW0pIHtcbiAgLmctbWF4NSA+IC5naSB7XG4gICAgd2lkdGg6IDMzLjMzMzMzMzMlO1xuICB9XG4gIC5nLW1heDUgPiAuZ2k6bnRoLW9mLXR5cGUoMm4rMSkge1xuICAgIGNsZWFyOiBub25lO1xuICB9XG4gIC5nLW1heDUgPiAuZ2k6bnRoLW9mLXR5cGUoM24rMSkge1xuICAgIGNsZWFyOiBsZWZ0O1xuICB9XG59XG5cbkBtZWRpYSBhbGwgYW5kIChtaW4td2lkdGg6IDQ2LjhlbSkge1xuICAuZy1tYXg1ID4gLmdpIHtcbiAgICB3aWR0aDogMjUlO1xuICB9XG4gIC5nLW1heDUgPiAuZ2k6bnRoLW9mLXR5cGUoM24rMSkge1xuICAgIGNsZWFyOiBub25lO1xuICB9XG4gIC5nLW1heDUgPiAuZ2k6bnRoLW9mLXR5cGUoNG4rMSkge1xuICAgIGNsZWFyOiBsZWZ0O1xuICB9XG59XG5cbkBtZWRpYSBhbGwgYW5kIChtaW4td2lkdGg6IDQ4ZW0pIHtcbiAgLmctbWF4NSA+IC5naSB7XG4gICAgd2lkdGg6IDIwJTtcbiAgfVxuICAuZy1tYXg1ID4gLmdpOm50aC1vZi10eXBlKDRuKzEpIHtcbiAgICBjbGVhcjogbm9uZTtcbiAgfVxuICAuZy1tYXg1ID4gLmdpOm50aC1vZi10eXBlKDVuKzEpIHtcbiAgICBjbGVhcjogbGVmdDtcbiAgfVxufVxuXG4vKiBHcmlkIDIvMyAqL1xuQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDogNDYuOGVtKSB7XG4gIC5naS0yLTMge1xuICAgIGZsb2F0OiBsZWZ0O1xuICAgIHdpZHRoOiA2Ni42NjY2NjYlO1xuICB9XG59XG5cbkBtZWRpYSBhbGwgYW5kIChtaW4td2lkdGg6IDQ2LjhlbSkge1xuICAuZ2ktMS0zIHtcbiAgICBmbG9hdDogbGVmdDtcbiAgICB3aWR0aDogMzMuMzMzMzMzJTtcbiAgfVxufVxuXG4vKiBHcmlkIDR1cCBibG9jayAqL1xuLmctb3Bwb3NpdGVzIC5naSB7XG4gIGZsb2F0OiBsZWZ0O1xufVxuXG4uZy1vcHBvc2l0ZXMgLmdpOmxhc3QtY2hpbGQge1xuICBmbG9hdDogcmlnaHQ7XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xufVxuXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSogICAgJFBBR0UgU1RSVUNUVVJFXG5cXCotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuLmhlYWRlciB7XG4gIGJhY2tncm91bmQ6IHdoaXRlO1xuICBwYWRkaW5nOiAwO1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2RiZGJkYjtcbn1cblxuLmxvZ28ge1xuICBmbG9hdDogbGVmdDtcbiAgbWF4LXdpZHRoOiA4cmVtO1xuICBtYXJnaW46IDAuNHJlbTtcbn1cblxuQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDogNDYuOGVtKSB7XG4gIC5sb2dvIHtcbiAgICBtYXgtd2lkdGg6IDlyZW07XG4gIH1cbn1cblxuLm5hdi10b2dnbGUge1xuICBmbG9hdDogcmlnaHQ7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBwYWRkaW5nOiAwLjlyZW0gMXJlbSAwLjdyZW07XG4gIGZvbnQtc2l6ZTogMS4zcmVtO1xuICBsaW5lLWhlaWdodDogMTtcbiAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAjZGJkYmRiO1xufVxuXG5AbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOiA0Ni44ZW0pIHtcbiAgLm5hdi10b2dnbGUge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbn1cblxuLnNlYXJjaC1mb3JtIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgbWF4LWhlaWdodDogMDtcbn1cblxuQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDogNDYuOGVtKSB7XG4gIC5zZWFyY2gtZm9ybSB7XG4gICAgZmxvYXQ6IHJpZ2h0O1xuICAgIG1heC1oZWlnaHQ6IG5vbmU7XG4gICAgbWFyZ2luOiAwLjY1ZW0gMC41ZW0gMCAwO1xuICB9XG59XG5cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKiAgICAkTkFWSUdBVElPTlxuXFwqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbi5uYXYge1xuICBjbGVhcjogYm90aDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgbWF4LWhlaWdodDogMDtcbn1cblxuLm5hdiBhIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBhZGRpbmc6IDFyZW07XG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZWVlZWVlO1xufVxuXG4ubmF2LmFjdGl2ZSB7XG4gIG1heC1oZWlnaHQ6IDQwZW07XG59XG5cbkBtZWRpYSBhbGwgYW5kIChtaW4td2lkdGg6IDQ2LjhlbSkge1xuICAubmF2IHtcbiAgICBtYXgtaGVpZ2h0OiBub25lO1xuICAgIGZsb2F0OiByaWdodDtcbiAgICBjbGVhcjogbm9uZTtcbiAgfVxuICAubmF2IGxpIHtcbiAgICBmbG9hdDogbGVmdDtcbiAgfVxuICAubmF2IGEge1xuICAgIGJvcmRlcjogMDtcbiAgfVxufVxuXG4vKiBUd28gQ29sdW1uIExheW91dCAqL1xuQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDogNTBlbSkge1xuICAubC10d28tY29sIC5sLW1haW4ge1xuICAgIGZsb2F0OiBsZWZ0O1xuICAgIHdpZHRoOiA3MCU7XG4gICAgcGFkZGluZy1yaWdodDogMXJlbTtcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICB9XG59XG5cbkBtZWRpYSBhbGwgYW5kIChtYXgtd2lkdGg6IDUwZW0pIHtcbiAgLmwtdHdvLWNvbCAubC1zaWRlYmFyIHtcbiAgICBjbGVhcjogYm90aDtcbiAgfVxufVxuXG5AbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOiA1MGVtKSB7XG4gIC5sLXR3by1jb2wgLmwtc2lkZWJhciB7XG4gICAgZmxvYXQ6IGxlZnQ7XG4gICAgd2lkdGg6IDMwJTtcbiAgICBwYWRkaW5nOiAwIDAgMCAxcmVtO1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIH1cbn1cblxuLmFjY29yZGlvbiB7XG4gIG1hcmdpbi1ib3R0b206IDFyZW07XG59XG5cbi5hY2MtaGFuZGxlIHtcbiAgYmFja2dyb3VuZDogIzEzMTMxMztcbiAgY29sb3I6IHdoaXRlO1xuICBmb250LWZhbWlseTogR2VvcmdpYSwgVGltZXMsIFwiVGltZXMgTmV3IFJvbWFuXCIsIHNlcmlmO1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgcGFkZGluZzogMC41cmVtO1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2RkZGRkZDtcbn1cblxuLmFjYy1oYW5kbGU6YWZ0ZXIge1xuICBjb250ZW50OiBcIitcIjtcbiAgZmxvYXQ6IHJpZ2h0O1xufVxuXG4uYWNjLWhhbmRsZTpob3ZlciB7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgYmFja2dyb3VuZDogIzMzMzMzMztcbn1cblxuLmFjYy1oYW5kbGUuYWN0aXZlIHtcbiAgYmFja2dyb3VuZDogIzMzMzMzMztcbn1cblxuLmFjYy1oYW5kbGUuYWN0aXZlOmFmdGVyIHtcbiAgY29udGVudDogXCItXCI7XG59XG5cbi5hbGVydCB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgcGFkZGluZzogMXJlbTtcbiAgbWFyZ2luLWJvdHRvbTogLjVyZW07XG4gIGJvcmRlcjogMXB4IHNvbGlkICM4MDgwODA7XG4gIGJhY2tncm91bmQ6ICNmOWY5Zjk7XG59XG5cbi5hbGVydC1lcnJvciB7XG4gIGNvbG9yOiAjRjAwO1xuICBib3JkZXItY29sb3I6ICNGMDA7XG4gIGJhY2tncm91bmQ6ICNmZmJlYmU7XG59XG5cbi5zZWN0aW9uIHtcbiAgbWFyZ2luOiAwIDAgMXJlbTtcbn1cblxuLnNlY3Rpb24tdGl0bGUge1xuICBtYXJnaW4tYm90dG9tOiAwLjVyZW07XG59XG5cbi5hcnRpY2xlLWhlYWRlciBoMSB7XG4gIGZvbnQtc2l6ZTogMi41ZW07XG59XG5cbi5ieWxpbmUge1xuICBmb250LXNpemU6IDAuODc1ZW07XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbiAgbWFyZ2luLWJvdHRvbTogMC41cmVtO1xufVxuXG4vKiBCbG9jayAqL1xuLmJsb2NrIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLmJsb2NrIHA6bGFzdC1jaGlsZCB7XG4gIG1hcmdpbi1ib3R0b206IDA7XG59XG5cbi5oZWFkbGluZSB7XG4gIGxpbmUtaGVpZ2h0OiAxLjI7XG59XG5cbi8qIEhlcm8gQmxvY2sgKi9cbi5ibG9jay1oZXJvIHtcbiAgbWFyZ2luLWJvdHRvbTogMC41cmVtO1xufVxuXG4uYmxvY2staGVybyAuYi10aHVtYiBpbWcge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDogNTBlbSkge1xuICAuYmxvY2staGVybyB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB9XG4gIC5ibG9jay1oZXJvIC5iLXRleHQge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBib3R0b206IDA7XG4gICAgbGVmdDogMDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDAuNSk7XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIHBhZGRpbmc6IDEuNXJlbTtcbiAgfVxufVxuXG4vKiBCbG9jayBUaHVtYm5haWwgd2l0aCBIZWFkbGluZSAqL1xuLmJsb2NrLXRodW1iIHtcbiAgZGlzcGxheTogdGFibGU7XG4gIHdpZHRoOiAxMDAlO1xuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xufVxuXG4uYmxvY2stdGh1bWIgLmItaW5uZXIge1xuICBkaXNwbGF5OiB0YWJsZS1yb3c7XG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbkBtZWRpYSBhbGwgYW5kIChtaW4td2lkdGg6IDI5Ljc1ZW0pIHtcbiAgLmJsb2NrLXRodW1iIC5iLXRodW1iIHtcbiAgICBkaXNwbGF5OiB0YWJsZS1jZWxsO1xuICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7XG4gICAgd2lkdGg6IDMwJTtcbiAgICBtYXgtd2lkdGg6IDEwZW07XG4gIH1cbiAgLmJsb2NrLXRodW1iIC5iLXRodW1iIGltZyB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiBhdXRvO1xuICB9XG59XG5cbkBtZWRpYSBhbGwgYW5kIChtaW4td2lkdGg6IDI5Ljc1ZW0pIHtcbiAgLmJsb2NrLXRodW1iIC5iLXRleHQge1xuICAgIGRpc3BsYXk6IHRhYmxlLWNlbGw7XG4gICAgd2lkdGg6IDcwJTtcbiAgICBwYWRkaW5nOiAwIDFyZW07XG4gIH1cbn1cblxuLyogQmxvY2sgSGVhZGxpbmUgU3VtbWFyeSAqL1xuLmJsb2NrLWhlYWRsaW5lLXN1bW1hcnkgYSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBwYWRkaW5nOiAwLjVyZW07XG59XG5cbi8qIEJsb2NrIEluc2V0ICovXG4uYmxvY2staW5zZXQge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi5ibG9jay1pbnNldCAuYi10aHVtYiB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgei1pbmRleDogMDtcbn1cblxuLmJsb2NrLWluc2V0IC5iLXRodW1iIGltZyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4vKiBIZXJvIEJsb2NrICovXG4uYmxvY2staW5zZXQge1xuICBtYXJnaW4tYm90dG9tOiAwLjVyZW07XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLmJsb2NrLWluc2V0IC5oZWFkbGluZSB7XG4gIGZvbnQtc2l6ZTogMS4xZW07XG59XG5cbi5ibG9jay1pbnNldCAuYi10ZXh0IHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBib3R0b206IDA7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDAuNSk7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgcGFkZGluZzogMC41cmVtO1xufVxuXG4vKiBCbG9jayBUaHVtYiB3aXRoIFN1bW1hcnkgKi9cbi5ibG9jay10aHVtYi1zdW1tYXJ5IC5iLXRodW1iIHtcbiAgZmxvYXQ6IGxlZnQ7XG4gIHdpZHRoOiA1MCU7XG59XG5cbi5ibG9jay10aHVtYi1zdW1tYXJ5IC5iLXRleHQge1xuICBtYXJnaW4tbGVmdDogNTAlO1xuICBwYWRkaW5nOiAwLjVyZW07XG59XG5cbi5pbmxpbmUtbGlzdCBsaSB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLyogR2VuZXJpYyBQbGFjZWhvbGRlciBCcmljazogUkVNT1ZFIEZPUiBQUk9EVUNUSU9OICovXG4uYnJpY2sge1xuICBiYWNrZ3JvdW5kOiAjZGNkZGRjO1xuICBwYWRkaW5nOiAycmVtO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2VlZWVlZTtcbn1cblxuLnBhZ2luYXRpb24ge1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4ucGFnaW5hdGlvbiBsaSB7XG4gIGZsb2F0OiBsZWZ0O1xuICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAjZWVlZWVlO1xufVxuXG4ucGFnaW5hdGlvbiBsaTpsYXN0LWNoaWxkIHtcbiAgYm9yZGVyOiAwO1xufVxuXG4ucGFnaW5hdGlvbiBhIHtcbiAgcGFkZGluZzogMXJlbTtcbn1cblxuLyogU2VhcmNoIEZvcm0gKi9cbi5zZWFyY2gtZmllbGQge1xuICBwYWRkaW5nLXJpZ2h0OiAzZW07XG59XG5cbi5pbmxpbmUtZm9ybSAuc2VhcmNoLXN1Ym1pdCB7XG4gIGJhY2tncm91bmQ6IG5vbmU7XG4gIHBhZGRpbmc6IDAuNzhlbSAxZW07XG4gIGJvcmRlcjogMDtcbiAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCBncmF5O1xuICBjb2xvcjogZ3JheTtcbn1cblxuLnNvY2lhbC1zaGFyZSB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIG1hcmdpbi1ib3R0b206IDFyZW07XG59XG5cbi5zb2NpYWwtc2hhcmUgbGkge1xuICBmbG9hdDogbGVmdDtcbiAgbWFyZ2luLXJpZ2h0OiAwLjI1cmVtO1xufVxuXG4uc29jaWFsLXNoYXJlIGEge1xuICBiYWNrZ3JvdW5kOiAjMzMzMzMzO1xuICBjb2xvcjogd2hpdGU7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBwYWRkaW5nOiAwLjVyZW07XG59XG5cbi5zb2NpYWwtc2hhcmUgYTpob3ZlciB7XG4gIGJhY2tncm91bmQ6IGdyYXk7XG59XG5cbi50YWJzIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLnRhYnMgdWwge1xuICBkaXNwbGF5OiB0YWJsZTtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi50YWJzIGxpIHtcbiAgZGlzcGxheTogdGFibGUtY2VsbDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAjZGRkZGRkO1xufVxuXG4udGFicyBsaTpsYXN0LWNoaWxkIHtcbiAgYm9yZGVyLXJpZ2h0OiAwO1xufVxuXG4udGFicyBhIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBhZGRpbmc6IDAuNXJlbTtcbiAgYmFja2dyb3VuZDogZ3JheTtcbn1cblxuLnRhYnMgYTpob3ZlciwgLnRhYnMgYTpmb2N1cyB7XG4gIGJhY2tncm91bmQ6ICNkZGRkZGQ7XG59XG5cbi50YWJzIGEuYWN0aXZlIHtcbiAgYmFja2dyb3VuZDogIzMzMzMzMztcbiAgY29sb3I6IHdoaXRlO1xufVxuIiwiLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qXFxcbiAgICAkUkVTRVRcblxcKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4vKiBCb3JkZXItQm94IGh0dHA6L3BhdWxpcmlzaC5jb20vMjAxMi9ib3gtc2l6aW5nLWJvcmRlci1ib3gtZnR3LyAqL1xuKiB7XG4gIC1tb3otYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgLXdlYmtpdC1ib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuXG5odG1sLCBib2R5LCBkaXYsIG9iamVjdCwgaWZyYW1lLCBoMSwgaDIsIGgzLCBoNCwgaDUsIGg2LCBwLCBibG9ja3F1b3RlLCBvbCwgdWwsIGxpLCBmb3JtLCBsZWdlbmQsIGxhYmVsLCB0YWJsZSwgaGVhZGVyLCBmb290ZXIsIG5hdiwgc2VjdGlvbiwgZmlndXJlIHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xufVxuXG5oZWFkZXIsIGZvb3RlciwgbmF2LCBzZWN0aW9uLCBhcnRpY2xlLCBoZ3JvdXAsIGZpZ3VyZSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuIiwiLyohIG5vcm1hbGl6ZS5jc3MgdjQuMC4wIHwgTUlUIExpY2Vuc2UgfCBnaXRodWIuY29tL25lY29sYXMvbm9ybWFsaXplLmNzcyAqL1xuXG4vKipcbiAqIDEuIENoYW5nZSB0aGUgZGVmYXVsdCBmb250IGZhbWlseSBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqIDIuIFByZXZlbnQgYWRqdXN0bWVudHMgb2YgZm9udCBzaXplIGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZXMgaW4gSUUgYW5kIGlPUy5cbiAqL1xuXG5odG1sIHtcbiAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7IC8qIDEgKi9cbiAgLW1zLXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDIgKi9cbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBtYXJnaW4gaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKi9cblxuYm9keSB7XG4gIG1hcmdpbjogMDtcbn1cblxuLyogSFRNTDUgZGlzcGxheSBkZWZpbml0aW9uc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIEVkZ2UsIElFLCBhbmQgRmlyZWZveC5cbiAqIDIuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFLlxuICovXG5cbmFydGljbGUsXG5hc2lkZSxcbmRldGFpbHMsIC8qIDEgKi9cbmZpZ2NhcHRpb24sXG5maWd1cmUsXG5mb290ZXIsXG5oZWFkZXIsXG5tYWluLCAvKiAyICovXG5tZW51LFxubmF2LFxuc2VjdGlvbixcbnN1bW1hcnkgeyAvKiAxICovXG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICovXG5cbmF1ZGlvLFxuY2FudmFzLFxucHJvZ3Jlc3MsXG52aWRlbyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBpT1MgNC03LlxuICovXG5cbmF1ZGlvOm5vdChbY29udHJvbHNdKSB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIGhlaWdodDogMDtcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgdmVydGljYWwgYWxpZ25tZW50IGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuICovXG5cbnByb2dyZXNzIHtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwLS5cbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFLlxuICovXG5cbnRlbXBsYXRlLCAvKiAxICovXG5baGlkZGVuXSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi8qIExpbmtzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIG9uIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cbiAqL1xuXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBvdXRsaW5lIG9uIGZvY3VzZWQgbGlua3Mgd2hlbiB0aGV5IGFyZSBhbHNvIGFjdGl2ZSBvciBob3ZlcmVkXG4gKiBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqL1xuXG5hOmFjdGl2ZSxcbmE6aG92ZXIge1xuICBvdXRsaW5lLXdpZHRoOiAwO1xufVxuXG4vKiBUZXh0LWxldmVsIHNlbWFudGljc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiAxLiBSZW1vdmUgdGhlIGJvdHRvbSBib3JkZXIgaW4gRmlyZWZveCAzOS0uXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgdGV4dCBkZWNvcmF0aW9uIGluIENocm9tZSwgRWRnZSwgSUUsIE9wZXJhLCBhbmQgU2FmYXJpLlxuICovXG5cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTsgLyogMSAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsgLyogMiAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBQcmV2ZW50IHRoZSBkdXBsaWNhdGUgYXBwbGljYXRpb24gb2YgYGJvbGRlcmAgYnkgdGhlIG5leHQgcnVsZSBpbiBTYWZhcmkgNi5cbiAqL1xuXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGluaGVyaXQ7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgd2VpZ2h0IGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cbiAqL1xuXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzdHlsZSBpbiBBbmRyb2lkIDQuMy0uXG4gKi9cblxuZGZuIHtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGZvbnQgc2l6ZSBhbmQgbWFyZ2luIG9uIGBoMWAgZWxlbWVudHMgd2l0aGluIGBzZWN0aW9uYCBhbmRcbiAqIGBhcnRpY2xlYCBjb250ZXh0cyBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBTYWZhcmkuXG4gKi9cblxuaDEge1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luOiAwLjY3ZW0gMDtcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgYmFja2dyb3VuZCBhbmQgY29sb3IgaW4gSUUgOS0uXG4gKi9cblxubWFyayB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZjA7XG4gIGNvbG9yOiAjMDAwO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbnNtYWxsIHtcbiAgZm9udC1zaXplOiA4MCU7XG59XG5cbi8qKlxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgZWxlbWVudHMgZnJvbSBhZmZlY3RpbmcgdGhlIGxpbmUgaGVpZ2h0IGluXG4gKiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc3ViLFxuc3VwIHtcbiAgZm9udC1zaXplOiA3NSU7XG4gIGxpbmUtaGVpZ2h0OiAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuc3ViIHtcbiAgYm90dG9tOiAtMC4yNWVtO1xufVxuXG5zdXAge1xuICB0b3A6IC0wLjVlbTtcbn1cblxuLyogRW1iZWRkZWQgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGJvcmRlciBvbiBpbWFnZXMgaW5zaWRlIGxpbmtzIGluIElFIDEwLS5cbiAqL1xuXG5pbWcge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG59XG5cbi8qKlxuICogSGlkZSB0aGUgb3ZlcmZsb3cgaW4gSUUuXG4gKi9cblxuc3ZnOm5vdCg6cm9vdCkge1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4vKiBHcm91cGluZyBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuY29kZSxcbmtiZCxcbnByZSxcbnNhbXAge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7IC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgbWFyZ2luIGluIElFIDguXG4gKi9cblxuZmlndXJlIHtcbiAgbWFyZ2luOiAxZW0gNDBweDtcbn1cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBGaXJlZm94LlxuICogMi4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZSBhbmQgSUUuXG4gKi9cblxuaHIge1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDsgLyogMSAqL1xuICBoZWlnaHQ6IDA7IC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7IC8qIDIgKi9cbn1cblxuLyogRm9ybXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogQ2hhbmdlIGZvbnQgcHJvcGVydGllcyB0byBgaW5oZXJpdGAgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKi9cblxuYnV0dG9uLFxuaW5wdXQsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGZvbnQ6IGluaGVyaXQ7XG59XG5cbi8qKlxuICogUmVzdG9yZSB0aGUgZm9udCB3ZWlnaHQgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXG4gKi9cblxub3B0Z3JvdXAge1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLyoqXG4gKiBTaG93IHRoZSBvdmVyZmxvdyBpbiBJRS5cbiAqIDEuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UuXG4gKiAyLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlLCBGaXJlZm94LCBhbmQgSUUuXG4gKi9cblxuYnV0dG9uLFxuaW5wdXQsIC8qIDEgKi9cbnNlbGVjdCB7IC8qIDIgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7XG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBtYXJnaW4gaW4gU2FmYXJpLlxuICogMS4gUmVtb3ZlIHRoZSBtYXJnaW4gaW4gRmlyZWZveCBhbmQgU2FmYXJpLlxuICovXG5cbmJ1dHRvbixcbmlucHV0LFxuc2VsZWN0LFxudGV4dGFyZWEgeyAvKiAxICovXG4gIG1hcmdpbjogMDtcbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGluaGVyaXRlbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEVkZ2UsIEZpcmVmb3gsIGFuZCBJRS5cbiAqIDEuIFJlbW92ZSB0aGUgaW5oZXJpdGVuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRmlyZWZveC5cbiAqL1xuXG5idXR0b24sXG5zZWxlY3QgeyAvKiAxICovXG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xufVxuXG4vKipcbiAqIENoYW5nZSB0aGUgY3Vyc29yIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICovXG5cbmJ1dHRvbixcblt0eXBlPVwiYnV0dG9uXCJdLFxuW3R5cGU9XCJyZXNldFwiXSxcblt0eXBlPVwic3VibWl0XCJdIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4vKipcbiAqIFJlc3RvcmUgdGhlIGRlZmF1bHQgY3Vyc29yIHRvIGRpc2FibGVkIGVsZW1lbnRzIHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxuICovXG5cbltkaXNhYmxlZF0ge1xuICBjdXJzb3I6IGRlZmF1bHQ7XG59XG5cbi8qKlxuICogMS4gUHJldmVudCBhIFdlYktpdCBidWcgd2hlcmUgKDIpIGRlc3Ryb3lzIG5hdGl2ZSBgYXVkaW9gIGFuZCBgdmlkZW9gXG4gKiAgICBjb250cm9scyBpbiBBbmRyb2lkIDQuXG4gKiAyLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUy5cbiAqL1xuXG5idXR0b24sXG5odG1sIFt0eXBlPVwiYnV0dG9uXCJdLCAvKiAxICovXG5bdHlwZT1cInJlc2V0XCJdLFxuW3R5cGU9XCJzdWJtaXRcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgYm9yZGVyIGFuZCBwYWRkaW5nIGluIEZpcmVmb3guXG4gKi9cblxuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxuaW5wdXQ6Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXI6IDA7XG4gIHBhZGRpbmc6IDA7XG59XG5cbi8qKlxuICogUmVzdG9yZSB0aGUgZm9jdXMgc3R5bGVzIHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxuICovXG5cbmJ1dHRvbjotbW96LWZvY3VzcmluZyxcbmlucHV0Oi1tb3otZm9jdXNyaW5nIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0O1xufVxuXG4vKipcbiAqIENoYW5nZSB0aGUgYm9yZGVyLCBtYXJnaW4sIGFuZCBwYWRkaW5nIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICovXG5cbmZpZWxkc2V0IHtcbiAgYm9yZGVyOiAxcHggc29saWQgI2MwYzBjMDtcbiAgbWFyZ2luOiAwIDJweDtcbiAgcGFkZGluZzogMC4zNWVtIDAuNjI1ZW0gMC43NWVtO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIHRleHQgd3JhcHBpbmcgaW4gRWRnZSBhbmQgSUUuXG4gKiAyLiBDb3JyZWN0IHRoZSBjb2xvciBpbmhlcml0YW5jZSBmcm9tIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gSUUuXG4gKiAzLiBSZW1vdmUgdGhlIHBhZGRpbmcgc28gZGV2ZWxvcGVycyBhcmUgbm90IGNhdWdodCBvdXQgd2hlbiB0aGV5IHplcm8gb3V0XG4gKiAgICBgZmllbGRzZXRgIGVsZW1lbnRzIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5sZWdlbmQge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiAxICovXG4gIGNvbG9yOiBpbmhlcml0OyAvKiAyICovXG4gIGRpc3BsYXk6IHRhYmxlOyAvKiAxICovXG4gIG1heC13aWR0aDogMTAwJTsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAzICovXG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7IC8qIDEgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFLlxuICovXG5cbnRleHRhcmVhIHtcbiAgb3ZlcmZsb3c6IGF1dG87XG59XG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gSUUgMTAtLlxuICogMi4gUmVtb3ZlIHRoZSBwYWRkaW5nIGluIElFIDEwLS5cbiAqL1xuXG5bdHlwZT1cImNoZWNrYm94XCJdLFxuW3R5cGU9XCJyYWRpb1wiXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cbiAgcGFkZGluZzogMDsgLyogMiAqL1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGN1cnNvciBzdHlsZSBvZiBpbmNyZW1lbnQgYW5kIGRlY3JlbWVudCBidXR0b25zIGluIENocm9tZS5cbiAqL1xuXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgaGVpZ2h0OiBhdXRvO1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIG9kZCBhcHBlYXJhbmNlIG9mIHNlYXJjaCBpbnB1dHMgaW4gQ2hyb21lIGFuZCBTYWZhcmkuXG4gKi9cblxuW3R5cGU9XCJzZWFyY2hcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDtcbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGlubmVyIHBhZGRpbmcgYW5kIGNhbmNlbCBidXR0b25zIGluIENocm9tZSBvbiBPUyBYIGFuZFxuICogU2FmYXJpIG9uIE9TIFguXG4gKi9cblxuW3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24sXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbn1cbiIsIi8vIERlZmF1bHQgdHlwb2dyYXBoeSBmb3IgYWxsIGVsZW1lbnRzXG5ib2R5IHtcbiAgZm9udC1mYW1pbHk6IHR5cGUoZm9udC1mYW1pbHksIHNhbnMpO1xuXG4gIGNvbG9yOiBjb2xvcihwcmltYXJ5LCBkYXJrZXN0KTtcbn1cblxuXG4vKiBMaW5rcyAqL1xuYSB7XG4gIGNvbG9yOiBjb2xvcihhY3Rpb24pO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIG91dGxpbmU6IDA7XG59XG5hOmhvdmVyLCBhOmZvY3VzIHtcbiAgY29sb3I6IGNvbG9yKGFjdGlvbiwgaG92ZXIpO1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbn1cblxuLyogSGVhZGluZ3MgKi9cbi8vIEZpcnN0LCBhbnkgdW5pdmVyc2FsIGhlYWRpbmdzIHN0eWxlc1xuaDEsXG5oMixcbmgzLFxuaDQsXG5oNSxcbmg2IHsgZm9udC1mYW1pbHk6IHR5cGUoZm9udC1mYW1pbHksIHNlcmlmKTsgfVxuXG5oMSwgLmFscGhhIHtcbiAgZm9udC1zaXplOiB0eXBlKGZvbnQtc2l6ZSwgaDEpO1xuICBsaW5lLWhlaWdodDogdHlwZShsaW5lLWhlaWdodCwgaDEpO1xufVxuXG5oMiwgLmJldGEge1xuICBmb250LXNpemU6IHR5cGUoZm9udC1zaXplLCBoMik7XG4gIGxpbmUtaGVpZ2h0OiB0eXBlKGxpbmUtaGVpZ2h0LCBoMik7XG59XG5cbmgzLCAuZ2FtbWEge1xuICBmb250LXNpemU6IHR5cGUoZm9udC1zaXplLCBoMyk7XG4gIGxpbmUtaGVpZ2h0OiB0eXBlKGxpbmUtaGVpZ2h0LCBoMyk7XG59XG5cbmg0IHtcbiAgZm9udC1zaXplOiB0eXBlKGZvbnQtc2l6ZSwgaDQpO1xuICBsaW5lLWhlaWdodDogdHlwZShsaW5lLWhlaWdodCwgaDQpO1xufVxuXG5oNSB7XG4gIGZvbnQtc2l6ZTogdHlwZShmb250LXNpemUsIGg1KTtcbiAgbGluZS1oZWlnaHQ6IHR5cGUobGluZS1oZWlnaHQsIGg1KTtcbn1cblxuaDYge1xuICBmb250LXNpemU6IHR5cGUoZm9udC1zaXplLCBoNik7XG4gIGxpbmUtaGVpZ2h0OiB0eXBlKGxpbmUtaGVpZ2h0LCBoNik7XG59XG5cbi8qIFN1YmhlYWRpbmdzICovXG4uc3ViaGVhZGluZyB7XG4gIGZvbnQtZmFtaWx5OiB0eXBlKGZvbnQtZmFtaWx5LCBzYW5zKTtcbiAgZm9udC13ZWlnaHQ6IHR5cGUoZm9udC13ZWlnaHQsIGJvbGQpO1xufVxuXG4vKiBUZXh0LVJlbGF0ZWQgRWxlbWVudHMgKi9cbnAge1xuICBtYXJnaW4tYm90dG9tOiAxcmVtO1xuXG4gIGZvbnQtc2l6ZTogdHlwZShmb250LXNpemUpO1xuICBsaW5lLWhlaWdodDogdHlwZShsaW5lLWhlaWdodCk7XG59XG5cbi8qIEJsb2NrcXVvdGUgKi9cbmJsb2NrcXVvdGUge1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG4gIGJvcmRlci1sZWZ0OiAxcHggc29saWQgZ3JheTtcbiAgY29sb3I6IGdyYXk7XG4gIHBhZGRpbmctbGVmdDogMXJlbTtcbiAgbWFyZ2luLWJvdHRvbTogMXJlbTtcbn1cblxuLyogSG9yaXpvbnRhbCBSdWxlICovXG5ociB7XG4gIGJvcmRlcjogMDtcbiAgaGVpZ2h0OiAycHg7XG4gIGJhY2tncm91bmQ6ICNlZWVlZWU7XG4gIG1hcmdpbjogMnJlbSAwO1xufVxuXG5hYmJyIHtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IGRvdHRlZCBncmF5O1xuICBjdXJzb3I6IGhlbHA7XG59XG5cblxuXG4vKiBHbG9iYWwgRm9udCBDbGFzc2VzICovXG4uZm9udC1zZWNvbmRhcnkge1xuICBmb250LWZhbWlseTogR2VvcmdpYSwgVGltZXMsIFwiVGltZXMgTmV3IFJvbWFuXCIsIHNlcmlmO1xufVxuXG4uaW50cm8ge1xuICBmb250LXNpemU6IDEuMDYyNWVtO1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLnB1bGxxdW90ZSB7XG4gIGZvbnQtZmFtaWx5OiBHZW9yZ2lhLCBUaW1lcywgXCJUaW1lcyBOZXcgUm9tYW5cIiwgc2VyaWY7XG4gIGZvbnQtc2l6ZTogMS40Mzc1ZW07XG59XG5cbi50ZXh0IGEge1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbn1cbi50ZXh0IHVsIHtcbiAgbGlzdC1zdHlsZTogZGlzYztcbiAgbWFyZ2luOiAwIDAgMXJlbSAxLjJlbTtcbn1cbi50ZXh0IHVsIHVsIHtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbn1cbi50ZXh0IG9sIHtcbiAgbGlzdC1zdHlsZTogZGVjaW1hbDtcbiAgbWFyZ2luOiAwIDAgMXJlbSAxLjJlbTtcbn1cbi50ZXh0IG9sIG9sIHtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbn1cblxuXG4iLCJAY2hhcnNldCBcIlVURi04XCI7XG5cbi8vLyBHZW9yZ2lhIGZvbnQgc3RhY2suXG4vLy9cbi8vLyBAdHlwZSBMaXN0XG5cbiRnZW9yZ2lhOiBcIkdlb3JnaWFcIiwgXCJDYW1icmlhXCIsIFwiVGltZXMgTmV3IFJvbWFuXCIsIFwiVGltZXNcIiwgc2VyaWY7XG5cbi8vLyBIZWx2ZXRpY2EgZm9udCBzdGFjay5cbi8vL1xuLy8vIEB0eXBlIExpc3RcblxuJGhlbHZldGljYTogXCJIZWx2ZXRpY2EgTmV1ZVwiLCBcIkhlbHZldGljYVwiLCBcIlJvYm90b1wiLCBcIkFyaWFsXCIsIHNhbnMtc2VyaWY7XG5cbi8vLyBMdWNpZGEgR3JhbmRlIGZvbnQgc3RhY2suXG4vLy9cbi8vLyBAdHlwZSBMaXN0XG5cbiRsdWNpZGEtZ3JhbmRlOiBcIkx1Y2lkYSBHcmFuZGVcIiwgXCJUYWhvbWFcIiwgXCJWZXJkYW5hXCIsIFwiQXJpYWxcIiwgc2Fucy1zZXJpZjtcblxuLy8vIE1vbm9zcGFjZSBmb250IHN0YWNrLlxuLy8vXG4vLy8gQHR5cGUgTGlzdFxuXG4kbW9ub3NwYWNlOiBcIkJpdHN0cmVhbSBWZXJhIFNhbnMgTW9ub1wiLCBcIkNvbnNvbGFzXCIsIFwiQ291cmllclwiLCBtb25vc3BhY2U7XG5cbi8vLyBWZXJkYW5hIGZvbnQgc3RhY2suXG4vLy9cbi8vLyBAdHlwZSBMaXN0XG5cbiR2ZXJkYW5hOiBcIlZlcmRhbmFcIiwgXCJHZW5ldmFcIiwgc2Fucy1zZXJpZjtcbiIsIkBjaGFyc2V0IFwiVVRGLThcIjtcblxuLy8vIE1peGVzIGEgY29sb3Igd2l0aCBibGFjay5cbi8vL1xuLy8vIEBwYXJhbSB7Q29sb3J9ICRjb2xvclxuLy8vXG4vLy8gQHBhcmFtIHtOdW1iZXIgKFBlcmNlbnRhZ2UpfSAkcGVyY2VudFxuLy8vICAgVGhlIGFtb3VudCBvZiBibGFjayB0byBiZSBtaXhlZCBpbi5cbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBVc2FnZVxuLy8vICAgLmVsZW1lbnQge1xuLy8vICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBzaGFkZSgjZmZiYjUyLCA2MCUpO1xuLy8vICAgfVxuLy8vXG4vLy8gQGV4YW1wbGUgY3NzIC0gQ1NTIE91dHB1dFxuLy8vICAgLmVsZW1lbnQge1xuLy8vICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNjY0YTIwO1xuLy8vICAgfVxuLy8vXG4vLy8gQHJldHVybiB7Q29sb3J9XG5cbkBmdW5jdGlvbiBzaGFkZSgkY29sb3IsICRwZXJjZW50KSB7XG4gIEByZXR1cm4gbWl4KCMwMDAsICRjb2xvciwgJHBlcmNlbnQpO1xufVxuIiwiLy8gU2NhbGluZyBWYXJpYWJsZXNcbiRnb2xkZW46ICAgICAgICAgICAxLjYxODtcbiRtaW5vci1zZWNvbmQ6ICAgICAxLjA2NztcbiRtYWpvci1zZWNvbmQ6ICAgICAxLjEyNTtcbiRtaW5vci10aGlyZDogICAgICAxLjI7XG4kbWFqb3ItdGhpcmQ6ICAgICAgMS4yNTtcbiRwZXJmZWN0LWZvdXJ0aDogICAxLjMzMztcbiRhdWdtZW50ZWQtZm91cnRoOiAxLjQxNDtcbiRwZXJmZWN0LWZpZnRoOiAgICAxLjU7XG4kbWlub3Itc2l4dGg6ICAgICAgMS42O1xuJG1ham9yLXNpeHRoOiAgICAgIDEuNjY3O1xuJG1pbm9yLXNldmVudGg6ICAgIDEuNzc4O1xuJG1ham9yLXNldmVudGg6ICAgIDEuODc1O1xuJG9jdGF2ZTogICAgICAgICAgIDI7XG4kbWFqb3ItdGVudGg6ICAgICAgMi41O1xuJG1ham9yLWVsZXZlbnRoOiAgIDIuNjY3O1xuJG1ham9yLXR3ZWxmdGg6ICAgIDM7XG4kZG91YmxlLW9jdGF2ZTogICAgNDtcblxuJG1vZHVsYXItc2NhbGUtcmF0aW86ICRwZXJmZWN0LWZvdXJ0aCAhZGVmYXVsdDtcbiRtb2R1bGFyLXNjYWxlLWJhc2U6IGVtKCRlbS1iYXNlKSAhZGVmYXVsdDtcblxuQGZ1bmN0aW9uIG1vZHVsYXItc2NhbGUoJGluY3JlbWVudCwgJHZhbHVlOiAkbW9kdWxhci1zY2FsZS1iYXNlLCAkcmF0aW86ICRtb2R1bGFyLXNjYWxlLXJhdGlvKSB7XG4gICR2MTogbnRoKCR2YWx1ZSwgMSk7XG4gICR2MjogbnRoKCR2YWx1ZSwgbGVuZ3RoKCR2YWx1ZSkpO1xuICAkdmFsdWU6ICR2MTtcblxuICAvLyBzY2FsZSAkdjIgdG8ganVzdCBhYm92ZSAkdjFcbiAgQHdoaWxlICR2MiA+ICR2MSB7XG4gICAgJHYyOiAoJHYyIC8gJHJhdGlvKTsgLy8gd2lsbCBiZSBvZmYtYnktMVxuICB9XG4gIEB3aGlsZSAkdjIgPCAkdjEge1xuICAgICR2MjogKCR2MiAqICRyYXRpbyk7IC8vIHdpbGwgZml4IG9mZi1ieS0xXG4gIH1cblxuICAvLyBjaGVjayBBRlRFUiBzY2FsaW5nICR2MiB0byBwcmV2ZW50IGRvdWJsZS1jb3VudGluZyBjb3JuZXItY2FzZVxuICAkZG91YmxlLXN0cmFuZGVkOiAkdjIgPiAkdjE7XG5cbiAgQGlmICRpbmNyZW1lbnQgPiAwIHtcbiAgICBAZm9yICRpIGZyb20gMSB0aHJvdWdoICRpbmNyZW1lbnQge1xuICAgICAgQGlmICRkb3VibGUtc3RyYW5kZWQgYW5kICgkdjEgKiAkcmF0aW8pID4gJHYyIHtcbiAgICAgICAgJHZhbHVlOiAkdjI7XG4gICAgICAgICR2MjogKCR2MiAqICRyYXRpbyk7XG4gICAgICB9IEBlbHNlIHtcbiAgICAgICAgJHYxOiAoJHYxICogJHJhdGlvKTtcbiAgICAgICAgJHZhbHVlOiAkdjE7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgQGlmICRpbmNyZW1lbnQgPCAwIHtcbiAgICAvLyBhZGp1c3QgJHYyIHRvIGp1c3QgYmVsb3cgJHYxXG4gICAgQGlmICRkb3VibGUtc3RyYW5kZWQge1xuICAgICAgJHYyOiAoJHYyIC8gJHJhdGlvKTtcbiAgICB9XG5cbiAgICBAZm9yICRpIGZyb20gJGluY3JlbWVudCB0aHJvdWdoIC0xIHtcbiAgICAgIEBpZiAkZG91YmxlLXN0cmFuZGVkIGFuZCAoJHYxIC8gJHJhdGlvKSA8ICR2MiB7XG4gICAgICAgICR2YWx1ZTogJHYyO1xuICAgICAgICAkdjI6ICgkdjIgLyAkcmF0aW8pO1xuICAgICAgfSBAZWxzZSB7XG4gICAgICAgICR2MTogKCR2MSAvICRyYXRpbyk7XG4gICAgICAgICR2YWx1ZTogJHYxO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIEByZXR1cm4gJHZhbHVlO1xufVxuIiwiLy8gQ29udmVydCBwaXhlbHMgdG8gZW1zXG4vLyBlZy4gZm9yIGEgcmVsYXRpb25hbCB2YWx1ZSBvZiAxMnB4IHdyaXRlIGVtKDEyKSB3aGVuIHRoZSBwYXJlbnQgaXMgMTZweFxuLy8gaWYgdGhlIHBhcmVudCBpcyBhbm90aGVyIHZhbHVlIHNheSAyNHB4IHdyaXRlIGVtKDEyLCAyNClcblxuQGZ1bmN0aW9uIGVtKCRweHZhbCwgJGJhc2U6ICRlbS1iYXNlKSB7XG4gIEBpZiBub3QgdW5pdGxlc3MoJHB4dmFsKSB7XG4gICAgJHB4dmFsOiBzdHJpcC11bml0cygkcHh2YWwpO1xuICB9XG4gIEBpZiBub3QgdW5pdGxlc3MoJGJhc2UpIHtcbiAgICAkYmFzZTogc3RyaXAtdW5pdHMoJGJhc2UpO1xuICB9XG4gIEByZXR1cm4gKCRweHZhbCAvICRiYXNlKSAqIDFlbTtcbn1cbiIsIi5idG4ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGJhY2tncm91bmQ6ICMzMzMzMzM7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgbGluZS1oZWlnaHQ6IDE7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBwYWRkaW5nOiAxcmVtO1xuICBib3JkZXI6IDA7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cbi5idG46aG92ZXIsIC5idG46Zm9jdXMge1xuICBjb2xvcjogd2hpdGU7XG59XG4uYnRuLmRpc2FibGVkIHtcbiAgYmFja2dyb3VuZDogI2VlZWVlZTtcbiAgY29sb3I6ICNiYmJiYmI7XG59XG5cbi5idG4tc21hbGwge1xuICBwYWRkaW5nOiAwLjVyZW07XG59XG5cbi5idG4tbGFyZ2Uge1xuICBwYWRkaW5nOiAwLjVyZW07XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGJhY2tncm91bmQ6IGdyYXk7XG4gIGZvbnQtc2l6ZTogMS40cmVtO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xufVxuXG4udGV4dC1idG4ge1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG59XG4iLCJvbCwgdWwge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG59XG5cbi8qIERlZmluaXRpb24gTGlzdHMgKi9cbmRsIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgbWFyZ2luOiAwIDAgMXJlbTtcbn1cblxuZHQge1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuZGQge1xuICBtYXJnaW4tbGVmdDogMDtcbn1cblxuLyogSGVhZGxpbmUgTGlzdCAqL1xuLmhlYWRsaW5lLWxpc3Qge1xuICBtYXJnaW4tYm90dG9tOiAxcmVtO1xufVxuLmhlYWRsaW5lLWxpc3QuZmx1c2gge1xuICBtYXJnaW46IDA7XG59XG4uaGVhZGxpbmUtbGlzdCBoNCB7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG59XG4uaGVhZGxpbmUtbGlzdCBsaSB7XG4gIHBhZGRpbmc6IDAuMjVyZW0gMDtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNkZGRkZGQ7XG59XG5cbi8qIFBvc3QgTGlzdCAqL1xuLnBvc3QtbGlzdCBsaSB7XG4gIG1hcmdpbi1ib3R0b206IDFyZW07XG59XG5cbi8qIEJ1bGxldCBMaXN0ICovXG4uYnVsbGV0LWxpc3Qge1xuICBsaXN0LXN0eWxlOiBzcXVhcmU7XG4gIG1hcmdpbjogMCAwIDFlbSAxLjJlbTtcbiAgbGluZS1oZWlnaHQ6IDEuMztcbn1cbi5idWxsZXQtbGlzdCBsaSB7XG4gIG1hcmdpbi1ib3R0b206IDFyZW07XG59XG5cbi8qIFRleHQgTGlzdCAqL1xuLnRleHQtbGlzdCB7XG4gIG1hcmdpbjogMCAwIDFlbTtcbiAgbGluZS1oZWlnaHQ6IDEuMztcbn1cbi50ZXh0LWxpc3QgbGkge1xuICBtYXJnaW4tYm90dG9tOiAxcmVtO1xufVxuXG4udG9vbHRpcC1jb250YWluZXIge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cbi50b29sdGlwLWNvbnRhaW5lcjpob3ZlciAudG9vbHRpcCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4udG9vbHRpcC1saW5rIHtcbiAgYmFja2dyb3VuZDogI2Y5ZjlmOTtcbn1cblxuLnRvb2x0aXAge1xuICBkaXNwbGF5OiBub25lO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMS41ZW07XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAxOGVtO1xuICBwYWRkaW5nOiAxcmVtO1xuICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgYm9yZGVyOiAxcHggc29saWQgZ3JheTtcbiAgYm94LXNoYWRvdzogMC4zZW0gMC4zZW0gMWVtIDAgcmdiYSgwLCAwLCAwLCAwLjIpO1xufVxuLnRvb2x0aXAgaDIge1xuICBtYXJnaW4tdG9wOiAwO1xufVxuQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDogMjRlbSkge1xuICAudG9vbHRpcCB7XG4gICAgd2lkdGg6IDIyZW07XG4gIH1cbn1cbkBtZWRpYSBhbGwgYW5kIChtaW4td2lkdGg6IDI5Ljc1ZW0pIHtcbiAgLnRvb2x0aXAge1xuICAgIHdpZHRoOiAyN2VtO1xuICB9XG59XG5AbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOiAzOS44ZW0pIHtcbiAgLnRvb2x0aXAge1xuICAgIHdpZHRoOiAzMGVtO1xuICB9XG59IiwiLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qXFxcbiAgICAkTUVESUEgRUxFTUVOVFNcblxcKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4vKiBGbGV4aWJsZSBNZWRpYSAqL1xuaW1nLCB2aWRlbywgb2JqZWN0IHtcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IGF1dG87XG59XG5cbmlmcmFtZSB7XG4gIG1hcmdpbi1ib3R0b206IDFyZW07XG59XG5cbmZpZ3VyZSB7XG4gIG1hcmdpbi1ib3R0b206IDFyZW07XG59XG5maWd1cmUgaW1nIHtcbiAgbWFyZ2luLWJvdHRvbTogMC4yNXJlbTtcbn1cblxuZmlnY2FwdGlvbiB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cbiIsIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKlxcXG4gICAgJFRhYmxlXG5cXCotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuXG4kdGFibGUtbWFyZ2luOiBzcGFjaW5nKGhhbGYpO1xuJHRhYmxlLWNlbGwtc3BhY2luZzogc3BhY2luZygpIDA7XG4kdGFibGUtYm9yZGVyLWJvdHRvbTogY29udGFpbmVyKGJvcmRlcik7XG5cbiR0YWJsZS1oZWFkZXItZm9udC13ZWlnaHQ6IHR5cGUoZm9udC13ZWlnaHQsIGJvbGQpO1xuXG50YWJsZSB7XG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG4gIGZvbnQtZmVhdHVyZS1zZXR0aW5nczogJ2tlcm4nLCAnbGlnYScsICd0bnVtJztcbiAgbWFyZ2luOiAkdGFibGUtbWFyZ2luO1xuICB0YWJsZS1sYXlvdXQ6IGZpeGVkO1xuICB3aWR0aDogMTAwJTtcbn1cblxudGgge1xuICBib3JkZXItYm90dG9tOiAkdGFibGUtYm9yZGVyLWJvdHRvbTtcbiAgZm9udC13ZWlnaHQ6ICR0YWJsZS1oZWFkZXItZm9udC13ZWlnaHQ7XG4gIHBhZGRpbmc6ICR0YWJsZS1jZWxsLXNwYWNpbmc7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG59XG5cbnRkIHtcbiAgYm9yZGVyLWJvdHRvbTogJHRhYmxlLWJvcmRlci1ib3R0b207XG4gIHBhZGRpbmc6ICR0YWJsZS1jZWxsLXNwYWNpbmc7XG59XG5cbnRyLFxudGQsXG50aCB7IHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7IH1cblxuIiwiLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qXFxcbiAgICAkRk9STVNcblxcKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5mb3JtID4gZGl2IHtcbiAgbWFyZ2luLWJvdHRvbTogMXJlbTtcbn1cblxuZm9ybSBvbCwgZm9ybSB1bCB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIG1hcmdpbi1sZWZ0OiAwO1xufVxuXG5maWVsZHNldCB7XG4gIGJvcmRlcjogMDtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAwO1xufVxuXG5sYWJlbCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBwYWRkaW5nLWJvdHRvbTogMC4yNXJlbTtcbn1cblxuYnV0dG9uLCBpbnB1dCwgc2VsZWN0LCB0ZXh0YXJlYSB7XG4gIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICBmb250LXNpemU6IDEwMCU7XG4gIG1hcmdpbjogMDtcbn1cblxuaW5wdXQsIHRleHRhcmVhIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGJvcmRlcjogMXB4IHNvbGlkIGdyYXk7XG4gIHBhZGRpbmc6IDAuNXJlbSAwLjY1cmVtO1xufVxuXG5pbnB1dFt0eXBlPXRleHRdLCBpbnB1dFt0eXBlPXNlYXJjaF0sIGlucHV0W3R5cGU9dXJsXSwgaW5wdXRbdHlwZT1udW1iZXJdLCB0ZXh0YXJlYSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbn1cblxuYnV0dG9uLCBpbnB1dFt0eXBlPVwic3VibWl0XCJdIHtcbiAgcGFkZGluZzogMC41cmVtO1xuICBiYWNrZ3JvdW5kOiAjMzMzMzMzO1xuICBib3JkZXI6IDFweCBzb2xpZCBncmF5O1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbmlucHV0W3R5cGU9XCJjaGVja2JveFwiXSxcbmlucHV0W3R5cGU9XCJyYWRpb1wiXSB7XG4gIHdpZHRoOiBhdXRvO1xuICBtYXJnaW4tcmlnaHQ6IDAuM2VtO1xufVxuXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xuICBib3JkZXItcmFkaXVzOiAwO1xufVxuXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1jYW5jZWwtYnV0dG9uLFxuaW5wdXRbdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbn1cblxuLmZpZWxkLWNvbnRhaW5lciB7XG4gIG1hcmdpbi1ib3R0b206IDFyZW07XG59XG5cbi5pbmxpbmUtZm9ybSBmaWVsZHNldCwgLmlubGluZS1mb3JtIC5pbmxpbmUtY29udGFpbmVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuLmlubGluZS1mb3JtIGlucHV0W3R5cGU9c3VibWl0XSwgLmlubGluZS1mb3JtIGJ1dHRvbiwgLmlubGluZS1mb3JtIC5idG4ge1xuICBmb250LXNpemU6IDAuODc1ZW07XG4gIHBhZGRpbmc6IDAuNjVyZW0gMS4zcmVtO1xuICBiYWNrZ3JvdW5kOiAjMzMzMzMzO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgcmlnaHQ6IDA7XG4gIHotaW5kZXg6IDE7XG4gIHdpZHRoOiBhdXRvO1xufVxuLmlubGluZS1mb3JtIGlucHV0W3R5cGU9c3VibWl0XTpob3ZlciwgLmlubGluZS1mb3JtIGlucHV0W3R5cGU9c3VibWl0XTpmb2N1cywgLmlubGluZS1mb3JtIGJ1dHRvbjpob3ZlciwgLmlubGluZS1mb3JtIGJ1dHRvbjpmb2N1cywgLmlubGluZS1mb3JtIC5idG46aG92ZXIsIC5pbmxpbmUtZm9ybSAuYnRuOmZvY3VzIHtcbiAgYmFja2dyb3VuZDogZ3JheTtcbiAgY29sb3I6IHdoaXRlO1xufVxuXG4uaW5saW5lLXNlYXJjaC1yZXN1bHRzLWZvcm0ge1xuICB3aWR0aDogMTAwJTtcbn1cbkBtZWRpYSBhbGwgYW5kIChtaW4td2lkdGg6IDQ2LjhlbSkge1xuICAuaW5saW5lLXNlYXJjaC1yZXN1bHRzLWZvcm0ge1xuICAgIHdpZHRoOiA4MiU7XG4gIH1cbn1cbi5pbmxpbmUtc2VhcmNoLXJlc3VsdHMtZm9ybSBmaWVsZHNldCwgLmlubGluZS1zZWFyY2gtcmVzdWx0cy1mb3JtIC5pbmxpbmUtY29udGFpbmVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuLmlubGluZS1zZWFyY2gtcmVzdWx0cy1mb3JtIGlucHV0W3R5cGU9c3VibWl0XSwgLmlubGluZS1zZWFyY2gtcmVzdWx0cy1mb3JtIGJ1dHRvbiB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICByaWdodDogMDtcbiAgei1pbmRleDogMTtcbiAgd2lkdGg6IGF1dG87XG59XG5cbi8qIFZhbGlkYXRpb24gKi9cbi5oYXMtZXJyb3Ige1xuICBib3JkZXItY29sb3I6IHJlZDtcbn1cblxuLmlzLXZhbGlkIHtcbiAgYm9yZGVyLWNvbG9yOiAjMDg5ZTAwO1xufVxuIiwiYm9keSB7IGJhY2tncm91bmQ6IGNvbG9yKHByaW1hcnksIGxpZ2h0ZXN0KTsgfVxuXG5bcm9sZT1tYWluXSB7XG4gIHBhZGRpbmc6IDAuNXJlbSAwLjVyZW0gMnJlbTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLyogTGF5b3V0IENvbnRhaW5lciAqL1xuLnBsLCAubGMsIC5oZWFkZXIsIFtyb2xlPW1haW5dIHtcbiAgbWF4LXdpZHRoOiBicmVha3BvaW50KCdtYXgtd2lkdGgnKTtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHBhZGRpbmc6IHNwYWNpbmcoKTtcbn1cbiIsIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKlxcXG4gICAgJEZPT1RFUlxuXFwqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbi5mb290ZXIge1xuICBjbGVhcjogYm90aDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgYmFja2dyb3VuZDogIzEzMTMxMztcbiAgY29sb3I6IHdoaXRlO1xuICBsaW5lLWhlaWdodDogMS4yO1xufVxuLmZvb3RlciAubGMsIC5mb290ZXIgLmhlYWRlciwgLmZvb3RlciBbcm9sZT1tYWluXSB7XG4gIHBhZGRpbmc6IDFyZW0gMXJlbSAwO1xufVxuLmZvb3RlciBhIHtcbiAgY29sb3I6ICNmOWY5Zjk7XG59XG5cbi5uYXYtZm9vdGVyIHtcbiAgbWFyZ2luOiAtMXJlbSAtMXJlbSAxcmVtO1xufVxuLm5hdi1mb290ZXIgbGkge1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgIzMzMzMzMztcbn1cbkBtZWRpYSBhbGwgYW5kIChtaW4td2lkdGg6IDQ2LjhlbSkge1xuICAubmF2LWZvb3RlciBsaSB7XG4gICAgYm9yZGVyOiAwO1xuICAgIGZsb2F0OiBsZWZ0O1xuICB9XG59XG4ubmF2LWZvb3RlciBhIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBhZGRpbmc6IDFyZW07XG59XG5cbkBtZWRpYSBhbGwgYW5kIChtaW4td2lkdGg6IDQ2LjhlbSkge1xuICAuY29weXJpZ2h0IHtcbiAgICBmbG9hdDogcmlnaHQ7XG4gIH1cbn1cbiIsIi8vIENvbmZpZyBmb3IgU3luYXBzZSB1c2luZyBnbG9iYWwgdmFyaWFibGVzXG4kc3luYXBzZTogKFxuICBjb2x1bW5zOiAxMixcbiAgbGF5b3V0czogKFxuICAgICAgICB4czogIDAsXG4gICAgICAgIHNtOiAgYnJlYWtwb2ludCgnc21hbGwnKSxcbiAgICAgICAgbWQ6ICBicmVha3BvaW50KCdtZWRpdW0nKSxcbiAgICAgICAgbGc6IGJyZWFrcG9pbnQoJ2xhcmdlJylcbiAgICApLFxuICBzcGFjZVVuaXRzOiAoXG4gICAgc3BhY2luZygnaGFsZicpLFxuICAgIHNwYWNpbmcoKSxcbiAgICBzcGFjaW5nKCdkb3VibGUnKSxcbiAgICBzcGFjaW5nKCd0cmlwbGUnKVxuICApXG4pO1xuXG4vKlxuLy8gSWYgY3VzdG9tIFN5bmFwc2UgdXRpbGl0aWVzIGFyZSBuZWVkZWQsIHVzZSB0aGlzIG1peGluXG5cbkBtaXhpbiBzeW5hcHNlLWN1c3RvbSgkdmFyKSB7XG4gIEBpZiAoJHZhciA9PSAnbWFyZ2luLWF1dG8nKSB7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gIH1cbn1cblxuKi9cblxuXG5cblxuXG5cbi8qIEdyaWQgQ29udGFpbmVyICovXG4uZyB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIG1hcmdpbjogMCAtMC41cmVtO1xufVxuXG4vKiBHcmlkIEl0ZW0gKi9cbi5naSB7XG4gIHBhZGRpbmc6IDAuNXJlbTtcbn1cbi5naSBpbWcge1xuICBkaXNwbGF5OiBibG9jaztcbn1cbkBtZWRpYSBhbGwgYW5kIChtaW4td2lkdGg6IDQ2LjhlbSkge1xuICAuZ2kge1xuICAgIGZsb2F0OiBsZWZ0O1xuICB9XG59XG5cbi8qIEdyaWQgMXVwICovXG4uZy0xdXAgLmdpIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi8qIEdyaWQgMnVwICovXG5AbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOiA0Ni44ZW0pIHtcbiAgLmctMnVwID4gLmdpIHtcbiAgICBmbG9hdDogbGVmdDtcbiAgICB3aWR0aDogNTAlO1xuICB9XG4gIC5nLTJ1cCA+IC5naTpudGgtb2YtdHlwZShvZGQpIHtcbiAgICBjbGVhcjogbGVmdDtcbiAgfVxufVxuXG4vKiBHcmlkIEhhbGYgKEFsd2F5cyBkaXNwbGF5ZWQgc2lkZSBieSBzaWRlKSAqL1xuLmctaGFsZiA+IC5naSB7XG4gIGZsb2F0OiBsZWZ0O1xuICB3aWR0aDogNTAlO1xufVxuLmctaGFsZiA+IC5naTpudGgtb2YtdHlwZShvZGQpIHtcbiAgY2xlYXI6IGxlZnQ7XG59XG5cbi8qIEdyaWQgM3VwICovXG5AbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOiA0Ni44ZW0pIHtcbiAgLmctM3VwID4gLmdpIHtcbiAgICBmbG9hdDogbGVmdDtcbiAgICB3aWR0aDogNTAlO1xuICB9XG4gIC5nLTN1cCA+IC5naTpudGgtb2YtdHlwZSgybisxKSB7XG4gICAgY2xlYXI6IGxlZnQ7XG4gIH1cbn1cbkBtZWRpYSBhbGwgYW5kIChtaW4td2lkdGg6IDUwZW0pIHtcbiAgLmctM3VwID4gLmdpIHtcbiAgICB3aWR0aDogMzEuMzMzMzMzMyU7XG4gIH1cbiAgLmctM3VwID4gLmdpOm50aC1vZi10eXBlKDJuKzEpIHtcbiAgICBjbGVhcjogbm9uZTtcbiAgfVxuICAuZy0zdXAgPiAuZ2k6bnRoLW9mLXR5cGUoM24rMSkge1xuICAgIGNsZWFyOiBsZWZ0O1xuICB9XG59XG5cbi8qIEdyaWQgNHVwICovXG5AbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOiA0Ni44ZW0pIHtcbiAgLmctNHVwID4gLmdpIHtcbiAgICBmbG9hdDogbGVmdDtcbiAgICB3aWR0aDogNTAlO1xuICB9XG4gIC5nLTR1cCA+IC5naTpudGgtb2YtdHlwZSgybisxKSB7XG4gICAgY2xlYXI6IGJvdGg7XG4gIH1cbn1cbkBtZWRpYSBhbGwgYW5kIChtaW4td2lkdGg6IDUwZW0pIHtcbiAgLmctNHVwID4gLmdpIHtcbiAgICB3aWR0aDogMjUlO1xuICB9XG4gIC5nLTR1cCA+IC5naTpudGgtb2YtdHlwZSgybisxKSB7XG4gICAgY2xlYXI6IG5vbmU7XG4gIH1cbiAgLmctNHVwID4gLmdpOm50aC1vZi10eXBlKDRuKzEpIHtcbiAgICBjbGVhcjogbGVmdDtcbiAgfVxufVxuXG4vKiBHcmlkIFF1YXJ0ZXIgKEFsd2F5cyBkaXNwbGF5ZWQgc2lkZSBieSBzaWRlKSAqL1xuLmctcXVhcnRlciA+IC5naSB7XG4gIGZsb2F0OiBsZWZ0O1xuICB3aWR0aDogMjQlO1xufVxuLmctcXVhcnRlciA+IC5naTpudGgtb2YtdHlwZSg0bisxKSB7XG4gIGNsZWFyOiBsZWZ0O1xufVxuXG5AbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOiAyOS43NWVtKSB7XG4gIC5nLW1heDQgPiAuZ2kge1xuICAgIGZsb2F0OiBsZWZ0O1xuICAgIHdpZHRoOiA1MCU7XG4gIH1cbiAgLmctbWF4NCA+IC5naTpudGgtb2YtdHlwZSgybisxKSB7XG4gICAgY2xlYXI6IGJvdGg7XG4gIH1cbn1cbkBtZWRpYSBhbGwgYW5kIChtaW4td2lkdGg6IDM5LjhlbSkge1xuICAuZy1tYXg0ID4gLmdpIHtcbiAgICB3aWR0aDogMzMuMzMzMzMzMyU7XG4gIH1cbiAgLmctbWF4NCA+IC5naTpudGgtb2YtdHlwZSgybisxKSB7XG4gICAgY2xlYXI6IG5vbmU7XG4gIH1cbiAgLmctbWF4NCA+IC5naTpudGgtb2YtdHlwZSgzbisxKSB7XG4gICAgY2xlYXI6IGxlZnQ7XG4gIH1cbn1cbkBtZWRpYSBhbGwgYW5kIChtaW4td2lkdGg6IDUwZW0pIHtcbiAgLmctbWF4NCA+IC5naSB7XG4gICAgd2lkdGg6IDI1JTtcbiAgfVxuICAuZy1tYXg0ID4gLmdpOm50aC1vZi10eXBlKDNuKzEpIHtcbiAgICBjbGVhcjogbm9uZTtcbiAgfVxuICAuZy1tYXg0ID4gLmdpOm50aC1vZi10eXBlKDRuKzEpIHtcbiAgICBjbGVhcjogbGVmdDtcbiAgfVxufVxuXG4vKiBHcmlkIDV1cCAqL1xuLmctbWF4NSA+IC5naSB7XG4gIGZsb2F0OiBsZWZ0O1xuICB3aWR0aDogNTAlO1xufVxuLmctbWF4NSA+IC5naTpudGgtb2YtdHlwZSgybisxKSB7XG4gIGNsZWFyOiBib3RoO1xufVxuQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDogMzkuOGVtKSB7XG4gIC5nLW1heDUgPiAuZ2kge1xuICAgIHdpZHRoOiAzMy4zMzMzMzMzJTtcbiAgfVxuICAuZy1tYXg1ID4gLmdpOm50aC1vZi10eXBlKDJuKzEpIHtcbiAgICBjbGVhcjogbm9uZTtcbiAgfVxuICAuZy1tYXg1ID4gLmdpOm50aC1vZi10eXBlKDNuKzEpIHtcbiAgICBjbGVhcjogbGVmdDtcbiAgfVxufVxuQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDogNDYuOGVtKSB7XG4gIC5nLW1heDUgPiAuZ2kge1xuICAgIHdpZHRoOiAyNSU7XG4gIH1cbiAgLmctbWF4NSA+IC5naTpudGgtb2YtdHlwZSgzbisxKSB7XG4gICAgY2xlYXI6IG5vbmU7XG4gIH1cbiAgLmctbWF4NSA+IC5naTpudGgtb2YtdHlwZSg0bisxKSB7XG4gICAgY2xlYXI6IGxlZnQ7XG4gIH1cbn1cbkBtZWRpYSBhbGwgYW5kIChtaW4td2lkdGg6IDQ4ZW0pIHtcbiAgLmctbWF4NSA+IC5naSB7XG4gICAgd2lkdGg6IDIwJTtcbiAgfVxuICAuZy1tYXg1ID4gLmdpOm50aC1vZi10eXBlKDRuKzEpIHtcbiAgICBjbGVhcjogbm9uZTtcbiAgfVxuICAuZy1tYXg1ID4gLmdpOm50aC1vZi10eXBlKDVuKzEpIHtcbiAgICBjbGVhcjogbGVmdDtcbiAgfVxufVxuXG4vKiBHcmlkIDIvMyAqL1xuQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDogNDYuOGVtKSB7XG4gIC5naS0yLTMge1xuICAgIGZsb2F0OiBsZWZ0O1xuICAgIHdpZHRoOiA2Ni42NjY2NjYlO1xuICB9XG59XG5cbkBtZWRpYSBhbGwgYW5kIChtaW4td2lkdGg6IDQ2LjhlbSkge1xuICAuZ2ktMS0zIHtcbiAgICBmbG9hdDogbGVmdDtcbiAgICB3aWR0aDogMzMuMzMzMzMzJTtcbiAgfVxufVxuXG4vKiBHcmlkIDR1cCBibG9jayAqL1xuLmctb3Bwb3NpdGVzIC5naSB7XG4gIGZsb2F0OiBsZWZ0O1xufVxuLmctb3Bwb3NpdGVzIC5naTpsYXN0LWNoaWxkIHtcbiAgZmxvYXQ6IHJpZ2h0O1xuICB0ZXh0LWFsaWduOiByaWdodDtcbn1cbiIsIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKlxcXG4gICAgJFBBR0UgU1RSVUNUVVJFXG5cXCotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuLmhlYWRlciB7XG4gIGJhY2tncm91bmQ6IHdoaXRlO1xuICBwYWRkaW5nOiAwO1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2RiZGJkYjtcbn1cblxuLmxvZ28ge1xuICBmbG9hdDogbGVmdDtcbiAgbWF4LXdpZHRoOiA4cmVtO1xuICBtYXJnaW46IDAuNHJlbTtcbn1cbkBtZWRpYSBhbGwgYW5kIChtaW4td2lkdGg6IDQ2LjhlbSkge1xuICAubG9nbyB7XG4gICAgbWF4LXdpZHRoOiA5cmVtO1xuICB9XG59XG5cbi5uYXYtdG9nZ2xlIHtcbiAgZmxvYXQ6IHJpZ2h0O1xuICBkaXNwbGF5OiBibG9jaztcbiAgcGFkZGluZzogMC45cmVtIDFyZW0gMC43cmVtO1xuICBmb250LXNpemU6IDEuM3JlbTtcbiAgbGluZS1oZWlnaHQ6IDE7XG4gIGJvcmRlci1sZWZ0OiAxcHggc29saWQgI2RiZGJkYjtcbn1cbkBtZWRpYSBhbGwgYW5kIChtaW4td2lkdGg6IDQ2LjhlbSkge1xuICAubmF2LXRvZ2dsZSB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxufVxuXG4uc2VhcmNoLWZvcm0ge1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBtYXgtaGVpZ2h0OiAwO1xufVxuQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDogNDYuOGVtKSB7XG4gIC5zZWFyY2gtZm9ybSB7XG4gICAgZmxvYXQ6IHJpZ2h0O1xuICAgIG1heC1oZWlnaHQ6IG5vbmU7XG4gICAgbWFyZ2luOiAwLjY1ZW0gMC41ZW0gMCAwO1xuICB9XG59XG5cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKlxcXG4gICAgJE5BVklHQVRJT05cblxcKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4ubmF2IHtcbiAgY2xlYXI6IGJvdGg7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIG1heC1oZWlnaHQ6IDA7XG59XG4ubmF2IGEge1xuICBkaXNwbGF5OiBibG9jaztcbiAgcGFkZGluZzogMXJlbTtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNlZWVlZWU7XG59XG4ubmF2LmFjdGl2ZSB7XG4gIG1heC1oZWlnaHQ6IDQwZW07XG59XG5AbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOiA0Ni44ZW0pIHtcbiAgLm5hdiB7XG4gICAgbWF4LWhlaWdodDogbm9uZTtcbiAgICBmbG9hdDogcmlnaHQ7XG4gICAgY2xlYXI6IG5vbmU7XG4gIH1cbiAgLm5hdiBsaSB7XG4gICAgZmxvYXQ6IGxlZnQ7XG4gIH1cbiAgLm5hdiBhIHtcbiAgICBib3JkZXI6IDA7XG4gIH1cbn1cbiIsIi8qIFR3byBDb2x1bW4gTGF5b3V0ICovXG5AbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOiA1MGVtKSB7XG4gIC5sLXR3by1jb2wgLmwtbWFpbiB7XG4gICAgZmxvYXQ6IGxlZnQ7XG4gICAgd2lkdGg6IDcwJTtcbiAgICBwYWRkaW5nLXJpZ2h0OiAxcmVtO1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIH1cbn1cbkBtZWRpYSBhbGwgYW5kIChtYXgtd2lkdGg6IDUwZW0pIHtcbiAgLmwtdHdvLWNvbCAubC1zaWRlYmFyIHtcbiAgICBjbGVhcjogYm90aDtcbiAgfVxufVxuQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDogNTBlbSkge1xuICAubC10d28tY29sIC5sLXNpZGViYXIge1xuICAgIGZsb2F0OiBsZWZ0O1xuICAgIHdpZHRoOiAzMCU7XG4gICAgcGFkZGluZzogMCAwIDAgMXJlbTtcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICB9XG59XG4iLCIuYWNjb3JkaW9uIHtcbiAgbWFyZ2luLWJvdHRvbTogMXJlbTtcbn1cblxuLmFjYy1oYW5kbGUge1xuICBiYWNrZ3JvdW5kOiAjMTMxMzEzO1xuICBjb2xvcjogd2hpdGU7XG4gIGZvbnQtZmFtaWx5OiBHZW9yZ2lhLCBUaW1lcywgXCJUaW1lcyBOZXcgUm9tYW5cIiwgc2VyaWY7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBkaXNwbGF5OiBibG9jaztcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBwYWRkaW5nOiAwLjVyZW07XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZGRkZGRkO1xufVxuLmFjYy1oYW5kbGU6YWZ0ZXIge1xuICBjb250ZW50OiBcIitcIjtcbiAgZmxvYXQ6IHJpZ2h0O1xufVxuLmFjYy1oYW5kbGU6aG92ZXIge1xuICBjb2xvcjogd2hpdGU7XG4gIGJhY2tncm91bmQ6ICMzMzMzMzM7XG59XG4uYWNjLWhhbmRsZS5hY3RpdmUge1xuICBiYWNrZ3JvdW5kOiAjMzMzMzMzO1xufVxuLmFjYy1oYW5kbGUuYWN0aXZlOmFmdGVyIHtcbiAgY29udGVudDogXCItXCI7XG59XG4iLCIuYWxlcnQge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHBhZGRpbmc6IDFyZW07XG4gIG1hcmdpbi1ib3R0b206IC41cmVtO1xuICBib3JkZXI6IDFweCBzb2xpZCAjODA4MDgwO1xuICBiYWNrZ3JvdW5kOiAjZjlmOWY5O1xufVxuXG4uYWxlcnQtZXJyb3Ige1xuICBjb2xvcjogI0YwMDtcbiAgYm9yZGVyLWNvbG9yOiAjRjAwO1xuICBiYWNrZ3JvdW5kOiAjZmZiZWJlO1xufVxuIiwiLnNlY3Rpb24ge1xuICBtYXJnaW46IDAgMCAxcmVtO1xufVxuXG4uc2VjdGlvbi10aXRsZSB7XG4gIG1hcmdpbi1ib3R0b206IDAuNXJlbTtcbn1cblxuLmFydGljbGUtaGVhZGVyIGgxIHtcbiAgZm9udC1zaXplOiAyLjVlbTtcbn1cblxuLmJ5bGluZSB7XG4gIGZvbnQtc2l6ZTogMC44NzVlbTtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xuICBtYXJnaW4tYm90dG9tOiAwLjVyZW07XG59XG4iLCIvKiBCbG9jayAqL1xuLmJsb2NrIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cbi5ibG9jayBwOmxhc3QtY2hpbGQge1xuICBtYXJnaW4tYm90dG9tOiAwO1xufVxuXG4uaGVhZGxpbmUge1xuICBsaW5lLWhlaWdodDogMS4yO1xufVxuXG4vKiBIZXJvIEJsb2NrICovXG4uYmxvY2staGVybyB7XG4gIG1hcmdpbi1ib3R0b206IDAuNXJlbTtcbn1cbi5ibG9jay1oZXJvIC5iLXRodW1iIGltZyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDogNTBlbSkge1xuICAuYmxvY2staGVybyB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB9XG4gIC5ibG9jay1oZXJvIC5iLXRleHQge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBib3R0b206IDA7XG4gICAgbGVmdDogMDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDAuNSk7XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIHBhZGRpbmc6IDEuNXJlbTtcbiAgfVxufVxuXG4vKiBCbG9jayBUaHVtYm5haWwgd2l0aCBIZWFkbGluZSAqL1xuLmJsb2NrLXRodW1iIHtcbiAgZGlzcGxheTogdGFibGU7XG4gIHdpZHRoOiAxMDAlO1xuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xufVxuLmJsb2NrLXRodW1iIC5iLWlubmVyIHtcbiAgZGlzcGxheTogdGFibGUtcm93O1xuICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDogMjkuNzVlbSkge1xuICAuYmxvY2stdGh1bWIgLmItdGh1bWIge1xuICAgIGRpc3BsYXk6IHRhYmxlLWNlbGw7XG4gICAgdmVydGljYWwtYWxpZ246IHRvcDtcbiAgICB3aWR0aDogMzAlO1xuICAgIG1heC13aWR0aDogMTBlbTtcbiAgfVxuICAuYmxvY2stdGh1bWIgLmItdGh1bWIgaW1nIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IGF1dG87XG4gIH1cbn1cbkBtZWRpYSBhbGwgYW5kIChtaW4td2lkdGg6IDI5Ljc1ZW0pIHtcbiAgLmJsb2NrLXRodW1iIC5iLXRleHQge1xuICAgIGRpc3BsYXk6IHRhYmxlLWNlbGw7XG4gICAgd2lkdGg6IDcwJTtcbiAgICBwYWRkaW5nOiAwIDFyZW07XG4gIH1cbn1cblxuLyogQmxvY2sgSGVhZGxpbmUgU3VtbWFyeSAqL1xuLmJsb2NrLWhlYWRsaW5lLXN1bW1hcnkgYSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBwYWRkaW5nOiAwLjVyZW07XG59XG5cbi8qIEJsb2NrIEluc2V0ICovXG4uYmxvY2staW5zZXQge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG4uYmxvY2staW5zZXQgLmItdGh1bWIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHotaW5kZXg6IDA7XG59XG4uYmxvY2staW5zZXQgLmItdGh1bWIgaW1nIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qIEhlcm8gQmxvY2sgKi9cbi5ibG9jay1pbnNldCB7XG4gIG1hcmdpbi1ib3R0b206IDAuNXJlbTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuLmJsb2NrLWluc2V0IC5oZWFkbGluZSB7XG4gIGZvbnQtc2l6ZTogMS4xZW07XG59XG4uYmxvY2staW5zZXQgLmItdGV4dCB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYm90dG9tOiAwO1xuICBsZWZ0OiAwO1xuICB3aWR0aDogMTAwJTtcbiAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjUpO1xuICBjb2xvcjogd2hpdGU7XG4gIHBhZGRpbmc6IDAuNXJlbTtcbn1cblxuLyogQmxvY2sgVGh1bWIgd2l0aCBTdW1tYXJ5ICovXG4uYmxvY2stdGh1bWItc3VtbWFyeSAuYi10aHVtYiB7XG4gIGZsb2F0OiBsZWZ0O1xuICB3aWR0aDogNTAlO1xufVxuLmJsb2NrLXRodW1iLXN1bW1hcnkgLmItdGV4dCB7XG4gIG1hcmdpbi1sZWZ0OiA1MCU7XG4gIHBhZGRpbmc6IDAuNXJlbTtcbn1cblxuLmlubGluZS1saXN0IGxpIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuIiwiLyogR2VuZXJpYyBQbGFjZWhvbGRlciBCcmljazogUkVNT1ZFIEZPUiBQUk9EVUNUSU9OICovXG4uYnJpY2sge1xuICBiYWNrZ3JvdW5kOiAjZGNkZGRjO1xuICBwYWRkaW5nOiAycmVtO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2VlZWVlZTtcbn1cbiIsIi5wYWdpbmF0aW9uIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cbi5wYWdpbmF0aW9uIGxpIHtcbiAgZmxvYXQ6IGxlZnQ7XG4gIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICNlZWVlZWU7XG59XG4ucGFnaW5hdGlvbiBsaTpsYXN0LWNoaWxkIHtcbiAgYm9yZGVyOiAwO1xufVxuLnBhZ2luYXRpb24gYSB7XG4gIHBhZGRpbmc6IDFyZW07XG59XG4iLCIvKiBTZWFyY2ggRm9ybSAqL1xuLnNlYXJjaC1maWVsZCB7XG4gIHBhZGRpbmctcmlnaHQ6IDNlbTtcbn1cblxuLmlubGluZS1mb3JtIC5zZWFyY2gtc3VibWl0IHtcbiAgYmFja2dyb3VuZDogbm9uZTtcbiAgcGFkZGluZzogMC43OGVtIDFlbTtcbiAgYm9yZGVyOiAwO1xuICBib3JkZXItbGVmdDogMXB4IHNvbGlkIGdyYXk7XG4gIGNvbG9yOiBncmF5O1xufVxuIiwiLnNvY2lhbC1zaGFyZSB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIG1hcmdpbi1ib3R0b206IDFyZW07XG59XG4uc29jaWFsLXNoYXJlIGxpIHtcbiAgZmxvYXQ6IGxlZnQ7XG4gIG1hcmdpbi1yaWdodDogMC4yNXJlbTtcbn1cbi5zb2NpYWwtc2hhcmUgYSB7XG4gIGJhY2tncm91bmQ6ICMzMzMzMzM7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBhZGRpbmc6IDAuNXJlbTtcbn1cbi5zb2NpYWwtc2hhcmUgYTpob3ZlciB7XG4gIGJhY2tncm91bmQ6IGdyYXk7XG59XG4iLCIudGFicyB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG4udGFicyB1bCB7XG4gIGRpc3BsYXk6IHRhYmxlO1xuICB3aWR0aDogMTAwJTtcbn1cbi50YWJzIGxpIHtcbiAgZGlzcGxheTogdGFibGUtY2VsbDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAjZGRkZGRkO1xufVxuLnRhYnMgbGk6bGFzdC1jaGlsZCB7XG4gIGJvcmRlci1yaWdodDogMDtcbn1cbi50YWJzIGEge1xuICBkaXNwbGF5OiBibG9jaztcbiAgcGFkZGluZzogMC41cmVtO1xuICBiYWNrZ3JvdW5kOiBncmF5O1xufVxuLnRhYnMgYTpob3ZlciwgLnRhYnMgYTpmb2N1cyB7XG4gIGJhY2tncm91bmQ6ICNkZGRkZGQ7XG59XG4udGFicyBhLmFjdGl2ZSB7XG4gIGJhY2tncm91bmQ6ICMzMzMzMzM7XG4gIGNvbG9yOiB3aGl0ZTtcbn1cbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ== */
